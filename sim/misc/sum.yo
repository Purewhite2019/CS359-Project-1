                      | # Written by Purewhite: purewhite@sjtu.edu.cn
                      | # Using cdecl
                      | # Since "ret $4" doesn`t works at all,
                      | # we will use "iaddl" to conveniently free the space used by params
                      | 
  0x000:              | .pos 0
  0x000: 30f400010000 |     irmovl stack, %esp
  0x006: 30f500010000 |     irmovl stack, %ebp
  0x00c: 802c000000   |     call Main
  0x011: 00           |     halt
                      | 
                      | # Sample linked list
  0x014:              | .align 4
  0x014:              | ele1:
  0x014: 0a000000     |     .long 0x00a
  0x018: 1c000000     |     .long ele2
  0x01c:              | ele2:
  0x01c: b0000000     |     .long 0x0b0
  0x020: 24000000     |     .long ele3
  0x024:              | ele3:
  0x024: 000c0000     |     .long 0xc00
  0x028: 00000000     |     .long 0    
                      | 
  0x02c:              | Main:
                      |     # Function prologue
  0x02c: a05f         |     pushl %ebp
  0x02e: 2045         |     rrmovl %esp, %ebp
                      | 
                      |     # Function body
                      |     # Since main() only calls sum(), it has no caller-save registers.
  0x030: 30f014000000 |     irmovl ele1, %eax
  0x036: a00f         |     pushl %eax
  0x038: 8048000000   |     call Sum
  0x03d: c0f404000000 |     iaddl $4, %esp  # "ret $4" doesn`t works at all.
                      |                     # We must use "iaddl" to conveniently free the space used by params
                      | 
                      |     # Function epilogue
  0x043: 2054         | 	rrmovl %ebp,%esp
  0x045: b05f         | 	popl %ebp
  0x047: 90           | 	ret 
                      | 
                      | # sum(list_ptr ls), list_ptr ls in %edi
  0x048:              | Sum:
                      |     # Function prologue
                      |     # Save stack pointers
  0x048: a05f         |     pushl %ebp
  0x04a: 2045         |     rrmovl %esp, %ebp
                      |     # Save callee-save regs
  0x04c: a03f         |     pushl %ebx
  0x04e: a07f         |     pushl %edi
                      |     # %edi = ls
  0x050: 507508000000 |     mrmovl 8(%ebp), %edi
                      | 
                      |     # Function body
                      |     # int val = 0
  0x056: 6300         |     xorl %eax, %eax
  0x058: 706b000000   |     jmp Sum_test
  0x05d:              | Sum_loop:
                      |     # ebx = *edi
  0x05d: 503700000000 |     mrmovl (%edi), %ebx 
                      |     # val = val + *edi
  0x063: 6030         |     addl %ebx, %eax
                      |     # edi = edi->next
  0x065: 507704000000 |     mrmovl 4(%edi), %edi
  0x06b:              | Sum_test:
                      |     #if (edi != nullptr) goto Sum_loop;
  0x06b: 6277         |     andl %edi, %edi
  0x06d: 745d000000   |     jne Sum_loop
                      | 
                      |     # Function epilogue
                      |     # Restore callee-save registers
  0x072: b07f         |     popl %edi
  0x074: b03f         |     popl %ebx
                      |     # Restore stack pointers
  0x076: 2054         |     rrmovl %ebp, %esp
  0x078: b05f         |     popl %ebp
  0x07a: 90           |     ret   # It seems that "ret $Val" doesn`t works at all!
                      | 
  0x100:              | .pos 0x100
  0x100:              | stack:
