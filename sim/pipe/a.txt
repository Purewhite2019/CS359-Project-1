Y86 Processor: pipe-full.hcl
1588 bytes of code read

Cycle 0. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x0, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 1. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x6
D: instr = irmovl, rA = ----, rB = %esp, valC = 0x634, valP = 0x6, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x6, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 2. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xc
D: instr = irmovl, rA = ----, rB = %ebp, valC = 0x634, valP = 0xc, Stat = AOK
E: instr = irmovl, valC = 0x634, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %esp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xc, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x634 0x0 --> 0x634

Cycle 3. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x12
D: instr = irmovl, rA = ----, rB = %eax, valC = 0x3f, valP = 0x12, Stat = AOK
E: instr = irmovl, valC = 0x634, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %ebp, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x634, valA = 0x0
   dstE = %esp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x12, imem_instr = pushl, f_instr = pushl
	Execute: ALU: + 0x634 0x0 --> 0x634

Cycle 4. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x14
D: instr = pushl, rA = %eax, rB = ----, valC = 0x0, valP = 0x14, Stat = AOK
E: instr = irmovl, valC = 0x3f, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %eax, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x634, valA = 0x0
   dstE = %ebp, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x634, valM = 0x0, dstE = %esp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x14, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x3f 0x0 --> 0x3f
	Writeback: Wrote 0x634 to register %esp

Cycle 5. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x1a
D: instr = irmovl, rA = ----, rB = %eax, valC = 0x4f4, valP = 0x1a, Stat = AOK
E: instr = pushl, valC = 0x0, valA = 0x3f, valB = 0x634
   srcA = %eax, srcB = %esp, dstE = %esp, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x3f, valA = 0x0
   dstE = %eax, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x634, valM = 0x0, dstE = %ebp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x1a, imem_instr = pushl, f_instr = pushl
	Execute: ALU: + 0xfffffffc 0x634 --> 0x630
	Writeback: Wrote 0x634 to register %ebp

Cycle 6. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x1c
D: instr = pushl, rA = %eax, rB = ----, valC = 0x0, valP = 0x1c, Stat = AOK
E: instr = irmovl, valC = 0x4f4, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %eax, dstM = ----, Stat = AOK
M: instr = pushl, Cnd = 1, valE = 0x630, valA = 0x3f
   dstE = %esp, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x3f, valM = 0x0, dstE = %eax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x1c, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x4f4 0x0 --> 0x4f4
	Writeback: Wrote 0x3f to register %eax
	Wrote 0x3f to address 0x630

Cycle 7. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x22
D: instr = irmovl, rA = ----, rB = %eax, valC = 0x3f0, valP = 0x22, Stat = AOK
E: instr = pushl, valC = 0x0, valA = 0x4f4, valB = 0x630
   srcA = %eax, srcB = %esp, dstE = %esp, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x4f4, valA = 0x0
   dstE = %eax, dstM = ----, Stat = AOK
W: instr = pushl, valE = 0x630, valM = 0x0, dstE = %esp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x22, imem_instr = pushl, f_instr = pushl
	Execute: ALU: + 0xfffffffc 0x630 --> 0x62c
	Writeback: Wrote 0x630 to register %esp

Cycle 8. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x24
D: instr = pushl, rA = %eax, rB = ----, valC = 0x0, valP = 0x24, Stat = AOK
E: instr = irmovl, valC = 0x3f0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %eax, dstM = ----, Stat = AOK
M: instr = pushl, Cnd = 1, valE = 0x62c, valA = 0x4f4
   dstE = %esp, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x4f4, valM = 0x0, dstE = %eax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x24, imem_instr = call, f_instr = call
	Execute: ALU: + 0x3f0 0x0 --> 0x3f0
	Writeback: Wrote 0x4f4 to register %eax
	Wrote 0x4f4 to address 0x62c

Cycle 9. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x2a
D: instr = call, rA = ----, rB = ----, valC = 0x2a, valP = 0x29, Stat = AOK
E: instr = pushl, valC = 0x0, valA = 0x3f0, valB = 0x62c
   srcA = %eax, srcB = %esp, dstE = %esp, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 1, valE = 0x3f0, valA = 0x0
   dstE = %eax, dstM = ----, Stat = AOK
W: instr = pushl, valE = 0x62c, valM = 0x0, dstE = %esp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x2a, imem_instr = pushl, f_instr = pushl
	Execute: ALU: + 0xfffffffc 0x62c --> 0x628
	Writeback: Wrote 0x62c to register %esp

Cycle 10. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x2c
D: instr = pushl, rA = %ebp, rB = ----, valC = 0x0, valP = 0x2c, Stat = AOK
E: instr = call, valC = 0x2a, valA = 0x29, valB = 0x628
   srcA = ----, srcB = %esp, dstE = %esp, dstM = ----, Stat = AOK
M: instr = pushl, Cnd = 1, valE = 0x628, valA = 0x3f0
   dstE = %esp, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x3f0, valM = 0x0, dstE = %eax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x2c, imem_instr = rrmovl, f_instr = rrmovl
	Execute: ALU: + 0xfffffffc 0x628 --> 0x624
	Writeback: Wrote 0x3f0 to register %eax
	Wrote 0x3f0 to address 0x628

Cycle 11. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x2e
D: instr = rrmovl, rA = %esp, rB = %ebp, valC = 0x0, valP = 0x2e, Stat = AOK
E: instr = pushl, valC = 0x0, valA = 0x634, valB = 0x624
   srcA = %ebp, srcB = %esp, dstE = %esp, dstM = ----, Stat = AOK
M: instr = call, Cnd = 1, valE = 0x624, valA = 0x29
   dstE = %esp, dstM = ----, Stat = AOK
W: instr = pushl, valE = 0x628, valM = 0x0, dstE = %esp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x2e, imem_instr = pushl, f_instr = pushl
	Execute: ALU: + 0xfffffffc 0x624 --> 0x620
	Writeback: Wrote 0x628 to register %esp
	Wrote 0x29 to address 0x624

Cycle 12. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x30
D: instr = pushl, rA = %esi, rB = ----, valC = 0x0, valP = 0x30, Stat = AOK
E: instr = rrmovl, valC = 0x0, valA = 0x620, valB = 0x0
   srcA = %esp, srcB = ----, dstE = %ebp, dstM = ----, Stat = AOK
M: instr = pushl, Cnd = 1, valE = 0x620, valA = 0x634
   dstE = %esp, dstM = ----, Stat = AOK
W: instr = call, valE = 0x624, valM = 0x0, dstE = %esp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x30, imem_instr = pushl, f_instr = pushl
	Execute: ALU: + 0x620 0x0 --> 0x620
	Writeback: Wrote 0x624 to register %esp
	Wrote 0x634 to address 0x620

Cycle 13. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x32
D: instr = pushl, rA = %ebx, rB = ----, valC = 0x0, valP = 0x32, Stat = AOK
E: instr = pushl, valC = 0x0, valA = 0x0, valB = 0x620
   srcA = %esi, srcB = %esp, dstE = %esp, dstM = ----, Stat = AOK
M: instr = rrmovl, Cnd = 1, valE = 0x620, valA = 0x620
   dstE = %ebp, dstM = ----, Stat = AOK
W: instr = pushl, valE = 0x620, valM = 0x0, dstE = %esp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x32, imem_instr = pushl, f_instr = pushl
	Execute: ALU: + 0xfffffffc 0x620 --> 0x61c
	Writeback: Wrote 0x620 to register %esp

Cycle 14. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x34
D: instr = pushl, rA = %edi, rB = ----, valC = 0x0, valP = 0x34, Stat = AOK
E: instr = pushl, valC = 0x0, valA = 0x0, valB = 0x61c
   srcA = %ebx, srcB = %esp, dstE = %esp, dstM = ----, Stat = AOK
M: instr = pushl, Cnd = 1, valE = 0x61c, valA = 0x0
   dstE = %esp, dstM = ----, Stat = AOK
W: instr = rrmovl, valE = 0x620, valM = 0x0, dstE = %ebp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x34, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0xfffffffc 0x61c --> 0x618
	Writeback: Wrote 0x620 to register %ebp
	Wrote 0x0 to address 0x61c

Cycle 15. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x3a
D: instr = mrmovl, rA = %ebx, rB = %ebp, valC = 0x8, valP = 0x3a, Stat = AOK
E: instr = pushl, valC = 0x0, valA = 0x0, valB = 0x618
   srcA = %edi, srcB = %esp, dstE = %esp, dstM = ----, Stat = AOK
M: instr = pushl, Cnd = 1, valE = 0x618, valA = 0x0
   dstE = %esp, dstM = ----, Stat = AOK
W: instr = pushl, valE = 0x61c, valM = 0x0, dstE = %esp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3a, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0xfffffffc 0x618 --> 0x614
	Writeback: Wrote 0x61c to register %esp
	Wrote 0x0 to address 0x618

Cycle 16. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x40
D: instr = mrmovl, rA = %edx, rB = %ebp, valC = 0x10, valP = 0x40, Stat = AOK
E: instr = mrmovl, valC = 0x8, valA = 0x0, valB = 0x620
   srcA = ----, srcB = %ebp, dstE = ----, dstM = %ebx, Stat = AOK
M: instr = pushl, Cnd = 1, valE = 0x614, valA = 0x0
   dstE = %esp, dstM = ----, Stat = AOK
W: instr = pushl, valE = 0x618, valM = 0x0, dstE = %esp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x40, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x8 0x620 --> 0x628
	Writeback: Wrote 0x618 to register %esp
	Wrote 0x0 to address 0x614

Cycle 17. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x46
D: instr = mrmovl, rA = %ecx, rB = %ebp, valC = 0xc, valP = 0x46, Stat = AOK
E: instr = mrmovl, valC = 0x10, valA = 0x628, valB = 0x620
   srcA = ----, srcB = %ebp, dstE = ----, dstM = %edx, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x628, valA = 0x0
   dstE = ----, dstM = %ebx, Stat = AOK
W: instr = pushl, valE = 0x614, valM = 0x0, dstE = %esp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x46, imem_instr = xorl, f_instr = xorl
	Memory: Read 0x3f0 from 0x628
	Execute: ALU: + 0x10 0x620 --> 0x630
	Writeback: Wrote 0x614 to register %esp

Cycle 18. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x48
D: instr = xorl, rA = %eax, rB = %eax, valC = 0x0, valP = 0x48, Stat = AOK
E: instr = mrmovl, valC = 0xc, valA = 0x630, valB = 0x620
   srcA = ----, srcB = %ebp, dstE = ----, dstM = %ecx, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x630, valA = 0x628
   dstE = ----, dstM = %edx, Stat = AOK
W: instr = mrmovl, valE = 0x628, valM = 0x3f0, dstE = ----, dstM = %ebx, Stat = AOK
	Fetch: f_pc = 0x48, imem_instr = iaddl, f_instr = iaddl
	Memory: Read 0x3f from 0x630
	Execute: ALU: + 0xc 0x620 --> 0x62c
	Writeback: Wrote 0x3f0 to register %ebx

Cycle 19. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x4e
D: instr = iaddl, rA = ----, rB = %edx, valC = 0xfffffff4, valP = 0x4e, Stat = AOK
E: instr = xorl, valC = 0x0, valA = 0x3f0, valB = 0x3f0
   srcA = %eax, srcB = %eax, dstE = %eax, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x62c, valA = 0x630
   dstE = ----, dstM = %ecx, Stat = AOK
W: instr = mrmovl, valE = 0x630, valM = 0x3f, dstE = ----, dstM = %edx, Stat = AOK
	Fetch: f_pc = 0x4e, imem_instr = jl, f_instr = jl
	Memory: Read 0x4f4 from 0x62c
	Execute: ALU: ^ 0x3f0 0x3f0 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Writeback: Wrote 0x3f to register %edx

Cycle 20. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x196
D: instr = jl, rA = ----, rB = ----, valC = 0x196, valP = 0x53, Stat = AOK
E: instr = iaddl, valC = 0xfffffff4, valA = 0x62c, valB = 0x3f
   srcA = ----, srcB = %edx, dstE = %edx, dstM = ----, Stat = AOK
M: instr = xorl, Cnd = 1, valE = 0x0, valA = 0x3f0
   dstE = %eax, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x62c, valM = 0x4f4, dstE = ----, dstM = %ecx, Stat = AOK
	Fetch: f_pc = 0x196, imem_instr = addl, f_instr = addl
	Execute: ALU: + 0xfffffff4 0x3f --> 0x33
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x4f4 to register %ecx

Cycle 21. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x198
D: instr = addl, rA = %edx, rB = %edx, valC = 0x0, valP = 0x198, Stat = AOK
E: instr = jl, valC = 0x196, valA = 0x53, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = iaddl, Cnd = 1, valE = 0x33, valA = 0x62c
   dstE = %edx, dstM = ----, Stat = AOK
W: instr = xorl, valE = 0x0, valM = 0x0, dstE = %eax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x198, imem_instr = addl, f_instr = addl
	Execute: instr = jl, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x0 to register %eax

Cycle 22. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x19a
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jl, Cnd = 0, valE = 0x0, valA = 0x53
   dstE = ----, dstM = ----, Stat = AOK
W: instr = iaddl, valE = 0x33, valM = 0x0, dstE = %edx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x53, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x33 to register %edx

Cycle 23. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x59
D: instr = mrmovl, rA = %esi, rB = %ebx, valC = 0x0, valP = 0x59, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jl, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x59, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 24. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x5f
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x4, valP = 0x5f, Stat = AOK
E: instr = mrmovl, valC = 0x0, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %esi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x5f, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x3f0 --> 0x3f0

Cycle 25. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x61
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x61, Stat = AOK
E: instr = mrmovl, valC = 0x4, valA = 0x3f0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f0, valA = 0x0
   dstE = ----, dstM = %esi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x61, imem_instr = rmmovl, f_instr = rmmovl
	Memory: Read 0x1 from 0x3f0
	Execute: ALU: + 0x4 0x3f0 --> 0x3f4

Cycle 26. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x67
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x0, valP = 0x67, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x1, valB = 0x1
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f4, valA = 0x3f0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = mrmovl, valE = 0x3f0, valM = 0x1, dstE = ----, dstM = %esi, Stat = AOK
	Fetch: f_pc = 0x67, imem_instr = jle, f_instr = jle
	Memory: Read 0xfffffffe from 0x3f4
	Execute: ALU: & 0x1 0x1 --> 0x1
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x1 to register %esi

Cycle 27. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6c
D: instr = jle, rA = ----, rB = ----, valC = 0x72, valP = 0x6c, Stat = AOK
E: instr = rmmovl, valC = 0x0, valA = 0x1, valB = 0x4f4
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x1, valA = 0x1
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x3f4, valM = 0xfffffffe, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x6c, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x4f4 --> 0x4f4
	Writeback: Wrote 0xfffffffe to register %edi

Cycle 28. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x72
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x72, Stat = AOK
E: instr = jle, valC = 0x72, valA = 0x6c, valB = 0x4f4
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x4f4, valA = 0x1
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x1, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x72, imem_instr = rmmovl, f_instr = rmmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x1 to register %esi
	Wrote 0x1 to address 0x4f4

Cycle 29. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x78
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x6c
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x4f4, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x78, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 30. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x7a
D: instr = andl, rA = %edi, rB = %edi, valC = 0x0, valP = 0x7a, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x7a, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 31. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x85
D: instr = jle, rA = ----, rB = ----, valC = 0x85, valP = 0x7f, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0xfffffffe, valB = 0xfffffffe
   srcA = %edi, srcB = %edi, dstE = %edi, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x85, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: & 0xfffffffe 0xfffffffe --> 0xfffffffe
	Execute: New cc = Z=0 S=1 O=0

Cycle 32. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x8b
D: instr = mrmovl, rA = %esi, rB = %ebx, valC = 0x8, valP = 0x8b, Stat = AOK
E: instr = jle, valC = 0x85, valA = 0x7f, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0xfffffffe, valA = 0xfffffffe
   dstE = %edi, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x8b, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=1 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 33. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x91
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0xc, valP = 0x91, Stat = AOK
E: instr = mrmovl, valC = 0x8, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %esi, Stat = AOK
M: instr = jle, Cnd = 1, valE = 0x0, valA = 0x7f
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0xfffffffe, valM = 0x0, dstE = %edi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x91, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x8 0x3f0 --> 0x3f8
	Writeback: Wrote 0xfffffffe to register %edi

Cycle 34. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x93
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x93, Stat = AOK
E: instr = mrmovl, valC = 0xc, valA = 0x3f8, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f8, valA = 0x0
   dstE = ----, dstM = %esi, Stat = AOK
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x93, imem_instr = rmmovl, f_instr = rmmovl
	Memory: Read 0x3 from 0x3f8
	Execute: ALU: + 0xc 0x3f0 --> 0x3fc

Cycle 35. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x99
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x8, valP = 0x99, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3fc, valA = 0x3f8
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = mrmovl, valE = 0x3f8, valM = 0x3, dstE = ----, dstM = %esi, Stat = AOK
	Fetch: f_pc = 0x99, imem_instr = jle, f_instr = jle
	Memory: Read 0x4 from 0x3fc
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x3 to register %esi

Cycle 36. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xa4
D: instr = jle, rA = ----, rB = ----, valC = 0xa4, valP = 0x9e, Stat = AOK
E: instr = rmmovl, valC = 0x8, valA = 0x3, valB = 0x4f4
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 1, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x3fc, valM = 0x4, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0xa4, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x8 0x4f4 --> 0x4fc
	Writeback: Wrote 0x4 to register %edi

Cycle 37. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xa6
D: instr = andl, rA = %edi, rB = %edi, valC = 0x0, valP = 0xa6, Stat = AOK
E: instr = jle, valC = 0xa4, valA = 0x9e, valB = 0x4fc
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x4fc, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xa6, imem_instr = rmmovl, f_instr = rmmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x4fc

Cycle 38. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xac
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x9e
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x4fc, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xac, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 39. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xb1
D: instr = jle, rA = ----, rB = ----, valC = 0xb7, valP = 0xb1, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xb1, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 40. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xb7
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0xb7, Stat = AOK
E: instr = jle, valC = 0xb7, valA = 0xb1, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xb7, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 41. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xbd
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xb1
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xbd, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 42. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc3
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x14, valP = 0xc3, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc3, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 43. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc5
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0xc5, Stat = AOK
E: instr = mrmovl, valC = 0x14, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xc5, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x14 0x3f0 --> 0x404

Cycle 44. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xcb
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x10, valP = 0xcb, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x404, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xcb, imem_instr = jle, f_instr = jle
	Memory: Read 0x6 from 0x404
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 45. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd0
D: instr = jle, rA = ----, rB = ----, valC = 0xd6, valP = 0xd0, Stat = AOK
E: instr = rmmovl, valC = 0x10, valA = 0x3, valB = 0x4f4
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x404, valM = 0x6, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0xd0, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x10 0x4f4 --> 0x504
	Writeback: Wrote 0x6 to register %edi

Cycle 46. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd6
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0xd6, Stat = AOK
E: instr = jle, valC = 0xd6, valA = 0xd0, valB = 0x504
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x504, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xd6, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x504

Cycle 47. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd8
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xd0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x504, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xd8, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 48. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xde
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x14, valP = 0xde, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xde, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 49. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xe3
D: instr = jle, rA = ----, rB = ----, valC = 0xe9, valP = 0xe3, Stat = AOK
E: instr = rmmovl, valC = 0x14, valA = 0x6, valB = 0x4f4
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xe3, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x14 0x4f4 --> 0x508

Cycle 50. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xe9
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0xe9, Stat = AOK
E: instr = jle, valC = 0xe9, valA = 0xe3, valB = 0x508
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x508, valA = 0x6
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xe9, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0x6 to address 0x508

Cycle 51. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xef
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xe3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x508, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xef, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 52. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf5
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x1c, valP = 0xf5, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xf5, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 53. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf7
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0xf7, Stat = AOK
E: instr = mrmovl, valC = 0x1c, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xf7, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x1c 0x3f0 --> 0x40c

Cycle 54. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xfd
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x18, valP = 0xfd, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x40c, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xfd, imem_instr = jle, f_instr = jle
	Memory: Read 0xfffffff8 from 0x40c
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 55. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x102
D: instr = jle, rA = ----, rB = ----, valC = 0x108, valP = 0x102, Stat = AOK
E: instr = rmmovl, valC = 0x18, valA = 0x3, valB = 0x4f4
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x40c, valM = 0xfffffff8, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x102, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x18 0x4f4 --> 0x50c
	Writeback: Wrote 0xfffffff8 to register %edi

Cycle 56. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x108
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x108, Stat = AOK
E: instr = jle, valC = 0x108, valA = 0x102, valB = 0x50c
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x50c, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x108, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x50c

Cycle 57. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x10a
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x102
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x50c, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x10a, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 58. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x110
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x1c, valP = 0x110, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x110, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 59. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x115
D: instr = jle, rA = ----, rB = ----, valC = 0x11b, valP = 0x115, Stat = AOK
E: instr = rmmovl, valC = 0x1c, valA = 0xfffffff8, valB = 0x4f4
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x115, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x1c 0x4f4 --> 0x510

Cycle 60. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x11b
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x11b, Stat = AOK
E: instr = jle, valC = 0x11b, valA = 0x115, valB = 0x510
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x510, valA = 0xfffffff8
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x11b, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xfffffff8 to address 0x510

Cycle 61. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x121
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x115
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x510, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x121, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 62. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x127
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x24, valP = 0x127, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x127, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 63. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x129
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x129, Stat = AOK
E: instr = mrmovl, valC = 0x24, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x129, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x24 0x3f0 --> 0x414

Cycle 64. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x12f
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x20, valP = 0x12f, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x414, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x12f, imem_instr = jle, f_instr = jle
	Memory: Read 0xa from 0x414
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 65. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x134
D: instr = jle, rA = ----, rB = ----, valC = 0x13a, valP = 0x134, Stat = AOK
E: instr = rmmovl, valC = 0x20, valA = 0x3, valB = 0x4f4
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x414, valM = 0xa, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x134, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x20 0x4f4 --> 0x514
	Writeback: Wrote 0xa to register %edi

Cycle 66. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x13a
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x13a, Stat = AOK
E: instr = jle, valC = 0x13a, valA = 0x134, valB = 0x514
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x514, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x13a, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x514

Cycle 67. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x13c
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x134
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x514, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x13c, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 68. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x142
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x24, valP = 0x142, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x142, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 69. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x147
D: instr = jle, rA = ----, rB = ----, valC = 0x14d, valP = 0x147, Stat = AOK
E: instr = rmmovl, valC = 0x24, valA = 0xa, valB = 0x4f4
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x147, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x24 0x4f4 --> 0x518

Cycle 70. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x14d
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x14d, Stat = AOK
E: instr = jle, valC = 0x14d, valA = 0x147, valB = 0x518
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x518, valA = 0xa
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x14d, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xa to address 0x518

Cycle 71. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x153
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x147
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x518, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x153, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 72. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x159
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x2c, valP = 0x159, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x159, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 73. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x15b
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x15b, Stat = AOK
E: instr = mrmovl, valC = 0x2c, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x15b, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x2c 0x3f0 --> 0x41c

Cycle 74. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x161
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x28, valP = 0x161, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x41c, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x161, imem_instr = jle, f_instr = jle
	Memory: Read 0xc from 0x41c
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 75. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x166
D: instr = jle, rA = ----, rB = ----, valC = 0x16c, valP = 0x166, Stat = AOK
E: instr = rmmovl, valC = 0x28, valA = 0x3, valB = 0x4f4
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x41c, valM = 0xc, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x166, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x28 0x4f4 --> 0x51c
	Writeback: Wrote 0xc to register %edi

Cycle 76. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x16c
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x16c, Stat = AOK
E: instr = jle, valC = 0x16c, valA = 0x166, valB = 0x51c
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x51c, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x16c, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x51c

Cycle 77. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x16e
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x166
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x51c, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x16e, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 78. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x174
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x2c, valP = 0x174, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x174, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 79. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x179
D: instr = jle, rA = ----, rB = ----, valC = 0x17f, valP = 0x179, Stat = AOK
E: instr = rmmovl, valC = 0x2c, valA = 0xc, valB = 0x4f4
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x179, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x2c 0x4f4 --> 0x520

Cycle 80. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x17f
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x17f, Stat = AOK
E: instr = jle, valC = 0x17f, valA = 0x179, valB = 0x520
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x520, valA = 0xc
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x17f, imem_instr = iaddl, f_instr = iaddl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xc to address 0x520

Cycle 81. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x185
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x179
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x520, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x185, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 82. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x18b
D: instr = iaddl, rA = ----, rB = %ecx, valC = 0x30, valP = 0x18b, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x18b, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 83. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x191
D: instr = iaddl, rA = ----, rB = %edx, valC = 0xfffffff4, valP = 0x191, Stat = AOK
E: instr = iaddl, valC = 0x30, valA = 0x0, valB = 0x4f4
   srcA = ----, srcB = %ecx, dstE = %ecx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x191, imem_instr = jge, f_instr = jge
	Execute: ALU: + 0x30 0x4f4 --> 0x524
	Execute: New cc = Z=0 S=0 O=0

Cycle 84. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x53
D: instr = jge, rA = ----, rB = ----, valC = 0x53, valP = 0x196, Stat = AOK
E: instr = iaddl, valC = 0xfffffff4, valA = 0x0, valB = 0x33
   srcA = ----, srcB = %edx, dstE = %edx, dstM = ----, Stat = AOK
M: instr = iaddl, Cnd = 1, valE = 0x524, valA = 0x0
   dstE = %ecx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x53, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0xfffffff4 0x33 --> 0x27
	Execute: New cc = Z=0 S=0 O=0

Cycle 85. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x59
D: instr = mrmovl, rA = %esi, rB = %ebx, valC = 0x0, valP = 0x59, Stat = AOK
E: instr = jge, valC = 0x53, valA = 0x196, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = iaddl, Cnd = 1, valE = 0x27, valA = 0x0
   dstE = %edx, dstM = ----, Stat = AOK
W: instr = iaddl, valE = 0x524, valM = 0x0, dstE = %ecx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x59, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jge, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x524 to register %ecx

Cycle 86. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x5f
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x4, valP = 0x5f, Stat = AOK
E: instr = mrmovl, valC = 0x0, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %esi, Stat = AOK
M: instr = jge, Cnd = 1, valE = 0x0, valA = 0x196
   dstE = ----, dstM = ----, Stat = AOK
W: instr = iaddl, valE = 0x27, valM = 0x0, dstE = %edx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x5f, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x3f0 --> 0x3f0
	Writeback: Wrote 0x27 to register %edx

Cycle 87. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x61
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x61, Stat = AOK
E: instr = mrmovl, valC = 0x4, valA = 0x3f0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f0, valA = 0x0
   dstE = ----, dstM = %esi, Stat = AOK
W: instr = jge, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x61, imem_instr = rmmovl, f_instr = rmmovl
	Memory: Read 0x1 from 0x3f0
	Execute: ALU: + 0x4 0x3f0 --> 0x3f4

Cycle 88. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x67
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x0, valP = 0x67, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x1, valB = 0x1
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f4, valA = 0x3f0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = mrmovl, valE = 0x3f0, valM = 0x1, dstE = ----, dstM = %esi, Stat = AOK
	Fetch: f_pc = 0x67, imem_instr = jle, f_instr = jle
	Memory: Read 0xfffffffe from 0x3f4
	Execute: ALU: & 0x1 0x1 --> 0x1
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x1 to register %esi

Cycle 89. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6c
D: instr = jle, rA = ----, rB = ----, valC = 0x72, valP = 0x6c, Stat = AOK
E: instr = rmmovl, valC = 0x0, valA = 0x1, valB = 0x524
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x1, valA = 0x1
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x3f4, valM = 0xfffffffe, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x6c, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x524 --> 0x524
	Writeback: Wrote 0xfffffffe to register %edi

Cycle 90. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x72
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x72, Stat = AOK
E: instr = jle, valC = 0x72, valA = 0x6c, valB = 0x524
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x524, valA = 0x1
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x1, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x72, imem_instr = rmmovl, f_instr = rmmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x1 to register %esi
	Wrote 0x1 to address 0x524

Cycle 91. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x78
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x6c
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x524, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x78, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 92. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x7a
D: instr = andl, rA = %edi, rB = %edi, valC = 0x0, valP = 0x7a, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x7a, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 93. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x85
D: instr = jle, rA = ----, rB = ----, valC = 0x85, valP = 0x7f, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0xfffffffe, valB = 0xfffffffe
   srcA = %edi, srcB = %edi, dstE = %edi, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x85, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: & 0xfffffffe 0xfffffffe --> 0xfffffffe
	Execute: New cc = Z=0 S=1 O=0

Cycle 94. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x8b
D: instr = mrmovl, rA = %esi, rB = %ebx, valC = 0x8, valP = 0x8b, Stat = AOK
E: instr = jle, valC = 0x85, valA = 0x7f, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0xfffffffe, valA = 0xfffffffe
   dstE = %edi, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x8b, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=1 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 95. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x91
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0xc, valP = 0x91, Stat = AOK
E: instr = mrmovl, valC = 0x8, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %esi, Stat = AOK
M: instr = jle, Cnd = 1, valE = 0x0, valA = 0x7f
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0xfffffffe, valM = 0x0, dstE = %edi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x91, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x8 0x3f0 --> 0x3f8
	Writeback: Wrote 0xfffffffe to register %edi

Cycle 96. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x93
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x93, Stat = AOK
E: instr = mrmovl, valC = 0xc, valA = 0x3f8, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f8, valA = 0x0
   dstE = ----, dstM = %esi, Stat = AOK
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x93, imem_instr = rmmovl, f_instr = rmmovl
	Memory: Read 0x3 from 0x3f8
	Execute: ALU: + 0xc 0x3f0 --> 0x3fc

Cycle 97. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x99
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x8, valP = 0x99, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3fc, valA = 0x3f8
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = mrmovl, valE = 0x3f8, valM = 0x3, dstE = ----, dstM = %esi, Stat = AOK
	Fetch: f_pc = 0x99, imem_instr = jle, f_instr = jle
	Memory: Read 0x4 from 0x3fc
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x3 to register %esi

Cycle 98. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xa4
D: instr = jle, rA = ----, rB = ----, valC = 0xa4, valP = 0x9e, Stat = AOK
E: instr = rmmovl, valC = 0x8, valA = 0x3, valB = 0x524
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 1, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x3fc, valM = 0x4, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0xa4, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x8 0x524 --> 0x52c
	Writeback: Wrote 0x4 to register %edi

Cycle 99. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xa6
D: instr = andl, rA = %edi, rB = %edi, valC = 0x0, valP = 0xa6, Stat = AOK
E: instr = jle, valC = 0xa4, valA = 0x9e, valB = 0x52c
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x52c, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xa6, imem_instr = rmmovl, f_instr = rmmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x52c

Cycle 100. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xac
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x9e
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x52c, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xac, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 101. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xb1
D: instr = jle, rA = ----, rB = ----, valC = 0xb7, valP = 0xb1, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xb1, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 102. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xb7
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0xb7, Stat = AOK
E: instr = jle, valC = 0xb7, valA = 0xb1, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xb7, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 103. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xbd
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xb1
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xbd, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 104. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc3
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x14, valP = 0xc3, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc3, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 105. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc5
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0xc5, Stat = AOK
E: instr = mrmovl, valC = 0x14, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xc5, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x14 0x3f0 --> 0x404

Cycle 106. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xcb
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x10, valP = 0xcb, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x404, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xcb, imem_instr = jle, f_instr = jle
	Memory: Read 0x6 from 0x404
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 107. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd0
D: instr = jle, rA = ----, rB = ----, valC = 0xd6, valP = 0xd0, Stat = AOK
E: instr = rmmovl, valC = 0x10, valA = 0x3, valB = 0x524
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x404, valM = 0x6, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0xd0, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x10 0x524 --> 0x534
	Writeback: Wrote 0x6 to register %edi

Cycle 108. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd6
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0xd6, Stat = AOK
E: instr = jle, valC = 0xd6, valA = 0xd0, valB = 0x534
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x534, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xd6, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x534

Cycle 109. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd8
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xd0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x534, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xd8, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 110. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xde
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x14, valP = 0xde, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xde, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 111. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xe3
D: instr = jle, rA = ----, rB = ----, valC = 0xe9, valP = 0xe3, Stat = AOK
E: instr = rmmovl, valC = 0x14, valA = 0x6, valB = 0x524
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xe3, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x14 0x524 --> 0x538

Cycle 112. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xe9
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0xe9, Stat = AOK
E: instr = jle, valC = 0xe9, valA = 0xe3, valB = 0x538
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x538, valA = 0x6
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xe9, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0x6 to address 0x538

Cycle 113. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xef
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xe3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x538, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xef, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 114. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf5
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x1c, valP = 0xf5, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xf5, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 115. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf7
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0xf7, Stat = AOK
E: instr = mrmovl, valC = 0x1c, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xf7, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x1c 0x3f0 --> 0x40c

Cycle 116. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xfd
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x18, valP = 0xfd, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x40c, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xfd, imem_instr = jle, f_instr = jle
	Memory: Read 0xfffffff8 from 0x40c
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 117. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x102
D: instr = jle, rA = ----, rB = ----, valC = 0x108, valP = 0x102, Stat = AOK
E: instr = rmmovl, valC = 0x18, valA = 0x3, valB = 0x524
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x40c, valM = 0xfffffff8, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x102, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x18 0x524 --> 0x53c
	Writeback: Wrote 0xfffffff8 to register %edi

Cycle 118. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x108
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x108, Stat = AOK
E: instr = jle, valC = 0x108, valA = 0x102, valB = 0x53c
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x53c, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x108, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x53c

Cycle 119. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x10a
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x102
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x53c, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x10a, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 120. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x110
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x1c, valP = 0x110, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x110, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 121. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x115
D: instr = jle, rA = ----, rB = ----, valC = 0x11b, valP = 0x115, Stat = AOK
E: instr = rmmovl, valC = 0x1c, valA = 0xfffffff8, valB = 0x524
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x115, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x1c 0x524 --> 0x540

Cycle 122. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x11b
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x11b, Stat = AOK
E: instr = jle, valC = 0x11b, valA = 0x115, valB = 0x540
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x540, valA = 0xfffffff8
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x11b, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xfffffff8 to address 0x540

Cycle 123. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x121
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x115
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x540, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x121, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 124. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x127
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x24, valP = 0x127, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x127, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 125. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x129
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x129, Stat = AOK
E: instr = mrmovl, valC = 0x24, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x129, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x24 0x3f0 --> 0x414

Cycle 126. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x12f
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x20, valP = 0x12f, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x414, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x12f, imem_instr = jle, f_instr = jle
	Memory: Read 0xa from 0x414
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 127. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x134
D: instr = jle, rA = ----, rB = ----, valC = 0x13a, valP = 0x134, Stat = AOK
E: instr = rmmovl, valC = 0x20, valA = 0x3, valB = 0x524
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x414, valM = 0xa, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x134, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x20 0x524 --> 0x544
	Writeback: Wrote 0xa to register %edi

Cycle 128. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x13a
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x13a, Stat = AOK
E: instr = jle, valC = 0x13a, valA = 0x134, valB = 0x544
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x544, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x13a, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x544

Cycle 129. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x13c
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x134
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x544, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x13c, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 130. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x142
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x24, valP = 0x142, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x142, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 131. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x147
D: instr = jle, rA = ----, rB = ----, valC = 0x14d, valP = 0x147, Stat = AOK
E: instr = rmmovl, valC = 0x24, valA = 0xa, valB = 0x524
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x147, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x24 0x524 --> 0x548

Cycle 132. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x14d
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x14d, Stat = AOK
E: instr = jle, valC = 0x14d, valA = 0x147, valB = 0x548
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x548, valA = 0xa
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x14d, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xa to address 0x548

Cycle 133. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x153
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x147
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x548, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x153, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 134. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x159
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x2c, valP = 0x159, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x159, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 135. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x15b
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x15b, Stat = AOK
E: instr = mrmovl, valC = 0x2c, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x15b, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x2c 0x3f0 --> 0x41c

Cycle 136. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x161
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x28, valP = 0x161, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x41c, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x161, imem_instr = jle, f_instr = jle
	Memory: Read 0xc from 0x41c
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 137. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x166
D: instr = jle, rA = ----, rB = ----, valC = 0x16c, valP = 0x166, Stat = AOK
E: instr = rmmovl, valC = 0x28, valA = 0x3, valB = 0x524
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x41c, valM = 0xc, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x166, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x28 0x524 --> 0x54c
	Writeback: Wrote 0xc to register %edi

Cycle 138. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x16c
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x16c, Stat = AOK
E: instr = jle, valC = 0x16c, valA = 0x166, valB = 0x54c
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x54c, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x16c, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x54c

Cycle 139. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x16e
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x166
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x54c, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x16e, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 140. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x174
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x2c, valP = 0x174, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x174, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 141. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x179
D: instr = jle, rA = ----, rB = ----, valC = 0x17f, valP = 0x179, Stat = AOK
E: instr = rmmovl, valC = 0x2c, valA = 0xc, valB = 0x524
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x179, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x2c 0x524 --> 0x550

Cycle 142. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x17f
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x17f, Stat = AOK
E: instr = jle, valC = 0x17f, valA = 0x179, valB = 0x550
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x550, valA = 0xc
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x17f, imem_instr = iaddl, f_instr = iaddl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xc to address 0x550

Cycle 143. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x185
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x179
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x550, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x185, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 144. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x18b
D: instr = iaddl, rA = ----, rB = %ecx, valC = 0x30, valP = 0x18b, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x18b, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 145. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x191
D: instr = iaddl, rA = ----, rB = %edx, valC = 0xfffffff4, valP = 0x191, Stat = AOK
E: instr = iaddl, valC = 0x30, valA = 0x0, valB = 0x524
   srcA = ----, srcB = %ecx, dstE = %ecx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x191, imem_instr = jge, f_instr = jge
	Execute: ALU: + 0x30 0x524 --> 0x554
	Execute: New cc = Z=0 S=0 O=0

Cycle 146. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x53
D: instr = jge, rA = ----, rB = ----, valC = 0x53, valP = 0x196, Stat = AOK
E: instr = iaddl, valC = 0xfffffff4, valA = 0x0, valB = 0x27
   srcA = ----, srcB = %edx, dstE = %edx, dstM = ----, Stat = AOK
M: instr = iaddl, Cnd = 1, valE = 0x554, valA = 0x0
   dstE = %ecx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x53, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0xfffffff4 0x27 --> 0x1b
	Execute: New cc = Z=0 S=0 O=0

Cycle 147. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x59
D: instr = mrmovl, rA = %esi, rB = %ebx, valC = 0x0, valP = 0x59, Stat = AOK
E: instr = jge, valC = 0x53, valA = 0x196, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = iaddl, Cnd = 1, valE = 0x1b, valA = 0x0
   dstE = %edx, dstM = ----, Stat = AOK
W: instr = iaddl, valE = 0x554, valM = 0x0, dstE = %ecx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x59, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jge, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x554 to register %ecx

Cycle 148. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x5f
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x4, valP = 0x5f, Stat = AOK
E: instr = mrmovl, valC = 0x0, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %esi, Stat = AOK
M: instr = jge, Cnd = 1, valE = 0x0, valA = 0x196
   dstE = ----, dstM = ----, Stat = AOK
W: instr = iaddl, valE = 0x1b, valM = 0x0, dstE = %edx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x5f, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x3f0 --> 0x3f0
	Writeback: Wrote 0x1b to register %edx

Cycle 149. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x61
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x61, Stat = AOK
E: instr = mrmovl, valC = 0x4, valA = 0x3f0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f0, valA = 0x0
   dstE = ----, dstM = %esi, Stat = AOK
W: instr = jge, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x61, imem_instr = rmmovl, f_instr = rmmovl
	Memory: Read 0x1 from 0x3f0
	Execute: ALU: + 0x4 0x3f0 --> 0x3f4

Cycle 150. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x67
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x0, valP = 0x67, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x1, valB = 0x1
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f4, valA = 0x3f0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = mrmovl, valE = 0x3f0, valM = 0x1, dstE = ----, dstM = %esi, Stat = AOK
	Fetch: f_pc = 0x67, imem_instr = jle, f_instr = jle
	Memory: Read 0xfffffffe from 0x3f4
	Execute: ALU: & 0x1 0x1 --> 0x1
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x1 to register %esi

Cycle 151. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6c
D: instr = jle, rA = ----, rB = ----, valC = 0x72, valP = 0x6c, Stat = AOK
E: instr = rmmovl, valC = 0x0, valA = 0x1, valB = 0x554
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x1, valA = 0x1
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x3f4, valM = 0xfffffffe, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x6c, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x554 --> 0x554
	Writeback: Wrote 0xfffffffe to register %edi

Cycle 152. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x72
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x72, Stat = AOK
E: instr = jle, valC = 0x72, valA = 0x6c, valB = 0x554
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x554, valA = 0x1
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x1, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x72, imem_instr = rmmovl, f_instr = rmmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x1 to register %esi
	Wrote 0x1 to address 0x554

Cycle 153. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x78
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x6c
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x554, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x78, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 154. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x7a
D: instr = andl, rA = %edi, rB = %edi, valC = 0x0, valP = 0x7a, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x7a, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 155. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x85
D: instr = jle, rA = ----, rB = ----, valC = 0x85, valP = 0x7f, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0xfffffffe, valB = 0xfffffffe
   srcA = %edi, srcB = %edi, dstE = %edi, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x85, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: & 0xfffffffe 0xfffffffe --> 0xfffffffe
	Execute: New cc = Z=0 S=1 O=0

Cycle 156. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x8b
D: instr = mrmovl, rA = %esi, rB = %ebx, valC = 0x8, valP = 0x8b, Stat = AOK
E: instr = jle, valC = 0x85, valA = 0x7f, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0xfffffffe, valA = 0xfffffffe
   dstE = %edi, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x8b, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=1 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 157. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x91
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0xc, valP = 0x91, Stat = AOK
E: instr = mrmovl, valC = 0x8, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %esi, Stat = AOK
M: instr = jle, Cnd = 1, valE = 0x0, valA = 0x7f
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0xfffffffe, valM = 0x0, dstE = %edi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x91, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x8 0x3f0 --> 0x3f8
	Writeback: Wrote 0xfffffffe to register %edi

Cycle 158. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x93
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x93, Stat = AOK
E: instr = mrmovl, valC = 0xc, valA = 0x3f8, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f8, valA = 0x0
   dstE = ----, dstM = %esi, Stat = AOK
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x93, imem_instr = rmmovl, f_instr = rmmovl
	Memory: Read 0x3 from 0x3f8
	Execute: ALU: + 0xc 0x3f0 --> 0x3fc

Cycle 159. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x99
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x8, valP = 0x99, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3fc, valA = 0x3f8
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = mrmovl, valE = 0x3f8, valM = 0x3, dstE = ----, dstM = %esi, Stat = AOK
	Fetch: f_pc = 0x99, imem_instr = jle, f_instr = jle
	Memory: Read 0x4 from 0x3fc
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x3 to register %esi

Cycle 160. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xa4
D: instr = jle, rA = ----, rB = ----, valC = 0xa4, valP = 0x9e, Stat = AOK
E: instr = rmmovl, valC = 0x8, valA = 0x3, valB = 0x554
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 1, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x3fc, valM = 0x4, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0xa4, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x8 0x554 --> 0x55c
	Writeback: Wrote 0x4 to register %edi

Cycle 161. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xa6
D: instr = andl, rA = %edi, rB = %edi, valC = 0x0, valP = 0xa6, Stat = AOK
E: instr = jle, valC = 0xa4, valA = 0x9e, valB = 0x55c
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x55c, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xa6, imem_instr = rmmovl, f_instr = rmmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x55c

Cycle 162. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xac
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x9e
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x55c, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xac, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 163. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xb1
D: instr = jle, rA = ----, rB = ----, valC = 0xb7, valP = 0xb1, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xb1, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 164. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xb7
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0xb7, Stat = AOK
E: instr = jle, valC = 0xb7, valA = 0xb1, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xb7, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 165. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xbd
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xb1
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xbd, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 166. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc3
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x14, valP = 0xc3, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc3, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 167. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc5
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0xc5, Stat = AOK
E: instr = mrmovl, valC = 0x14, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xc5, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x14 0x3f0 --> 0x404

Cycle 168. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xcb
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x10, valP = 0xcb, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x404, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xcb, imem_instr = jle, f_instr = jle
	Memory: Read 0x6 from 0x404
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 169. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd0
D: instr = jle, rA = ----, rB = ----, valC = 0xd6, valP = 0xd0, Stat = AOK
E: instr = rmmovl, valC = 0x10, valA = 0x3, valB = 0x554
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x404, valM = 0x6, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0xd0, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x10 0x554 --> 0x564
	Writeback: Wrote 0x6 to register %edi

Cycle 170. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd6
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0xd6, Stat = AOK
E: instr = jle, valC = 0xd6, valA = 0xd0, valB = 0x564
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x564, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xd6, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x564

Cycle 171. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd8
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xd0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x564, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xd8, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 172. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xde
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x14, valP = 0xde, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xde, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 173. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xe3
D: instr = jle, rA = ----, rB = ----, valC = 0xe9, valP = 0xe3, Stat = AOK
E: instr = rmmovl, valC = 0x14, valA = 0x6, valB = 0x554
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xe3, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x14 0x554 --> 0x568

Cycle 174. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xe9
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0xe9, Stat = AOK
E: instr = jle, valC = 0xe9, valA = 0xe3, valB = 0x568
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x568, valA = 0x6
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xe9, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0x6 to address 0x568

Cycle 175. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xef
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xe3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x568, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xef, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 176. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf5
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x1c, valP = 0xf5, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xf5, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 177. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf7
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0xf7, Stat = AOK
E: instr = mrmovl, valC = 0x1c, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xf7, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x1c 0x3f0 --> 0x40c

Cycle 178. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xfd
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x18, valP = 0xfd, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x40c, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xfd, imem_instr = jle, f_instr = jle
	Memory: Read 0xfffffff8 from 0x40c
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 179. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x102
D: instr = jle, rA = ----, rB = ----, valC = 0x108, valP = 0x102, Stat = AOK
E: instr = rmmovl, valC = 0x18, valA = 0x3, valB = 0x554
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x40c, valM = 0xfffffff8, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x102, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x18 0x554 --> 0x56c
	Writeback: Wrote 0xfffffff8 to register %edi

Cycle 180. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x108
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x108, Stat = AOK
E: instr = jle, valC = 0x108, valA = 0x102, valB = 0x56c
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x56c, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x108, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x56c

Cycle 181. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x10a
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x102
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x56c, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x10a, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 182. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x110
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x1c, valP = 0x110, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x110, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 183. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x115
D: instr = jle, rA = ----, rB = ----, valC = 0x11b, valP = 0x115, Stat = AOK
E: instr = rmmovl, valC = 0x1c, valA = 0xfffffff8, valB = 0x554
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x115, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x1c 0x554 --> 0x570

Cycle 184. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x11b
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x11b, Stat = AOK
E: instr = jle, valC = 0x11b, valA = 0x115, valB = 0x570
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x570, valA = 0xfffffff8
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x11b, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xfffffff8 to address 0x570

Cycle 185. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x121
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x115
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x570, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x121, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 186. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x127
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x24, valP = 0x127, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x127, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 187. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x129
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x129, Stat = AOK
E: instr = mrmovl, valC = 0x24, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x129, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x24 0x3f0 --> 0x414

Cycle 188. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x12f
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x20, valP = 0x12f, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x414, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x12f, imem_instr = jle, f_instr = jle
	Memory: Read 0xa from 0x414
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 189. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x134
D: instr = jle, rA = ----, rB = ----, valC = 0x13a, valP = 0x134, Stat = AOK
E: instr = rmmovl, valC = 0x20, valA = 0x3, valB = 0x554
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x414, valM = 0xa, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x134, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x20 0x554 --> 0x574
	Writeback: Wrote 0xa to register %edi

Cycle 190. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x13a
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x13a, Stat = AOK
E: instr = jle, valC = 0x13a, valA = 0x134, valB = 0x574
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x574, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x13a, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x574

Cycle 191. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x13c
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x134
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x574, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x13c, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 192. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x142
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x24, valP = 0x142, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x142, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 193. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x147
D: instr = jle, rA = ----, rB = ----, valC = 0x14d, valP = 0x147, Stat = AOK
E: instr = rmmovl, valC = 0x24, valA = 0xa, valB = 0x554
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x147, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x24 0x554 --> 0x578

Cycle 194. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x14d
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x14d, Stat = AOK
E: instr = jle, valC = 0x14d, valA = 0x147, valB = 0x578
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x578, valA = 0xa
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x14d, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xa to address 0x578

Cycle 195. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x153
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x147
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x578, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x153, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 196. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x159
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x2c, valP = 0x159, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x159, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 197. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x15b
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x15b, Stat = AOK
E: instr = mrmovl, valC = 0x2c, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x15b, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x2c 0x3f0 --> 0x41c

Cycle 198. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x161
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x28, valP = 0x161, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x41c, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x161, imem_instr = jle, f_instr = jle
	Memory: Read 0xc from 0x41c
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 199. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x166
D: instr = jle, rA = ----, rB = ----, valC = 0x16c, valP = 0x166, Stat = AOK
E: instr = rmmovl, valC = 0x28, valA = 0x3, valB = 0x554
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x41c, valM = 0xc, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x166, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x28 0x554 --> 0x57c
	Writeback: Wrote 0xc to register %edi

Cycle 200. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x16c
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x16c, Stat = AOK
E: instr = jle, valC = 0x16c, valA = 0x166, valB = 0x57c
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x57c, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x16c, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x57c

Cycle 201. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x16e
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x166
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x57c, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x16e, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 202. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x174
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x2c, valP = 0x174, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x174, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 203. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x179
D: instr = jle, rA = ----, rB = ----, valC = 0x17f, valP = 0x179, Stat = AOK
E: instr = rmmovl, valC = 0x2c, valA = 0xc, valB = 0x554
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x179, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x2c 0x554 --> 0x580

Cycle 204. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x17f
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x17f, Stat = AOK
E: instr = jle, valC = 0x17f, valA = 0x179, valB = 0x580
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x580, valA = 0xc
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x17f, imem_instr = iaddl, f_instr = iaddl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xc to address 0x580

Cycle 205. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x185
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x179
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x580, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x185, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 206. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x18b
D: instr = iaddl, rA = ----, rB = %ecx, valC = 0x30, valP = 0x18b, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x18b, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 207. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x191
D: instr = iaddl, rA = ----, rB = %edx, valC = 0xfffffff4, valP = 0x191, Stat = AOK
E: instr = iaddl, valC = 0x30, valA = 0x0, valB = 0x554
   srcA = ----, srcB = %ecx, dstE = %ecx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x191, imem_instr = jge, f_instr = jge
	Execute: ALU: + 0x30 0x554 --> 0x584
	Execute: New cc = Z=0 S=0 O=0

Cycle 208. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x53
D: instr = jge, rA = ----, rB = ----, valC = 0x53, valP = 0x196, Stat = AOK
E: instr = iaddl, valC = 0xfffffff4, valA = 0x0, valB = 0x1b
   srcA = ----, srcB = %edx, dstE = %edx, dstM = ----, Stat = AOK
M: instr = iaddl, Cnd = 1, valE = 0x584, valA = 0x0
   dstE = %ecx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x53, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0xfffffff4 0x1b --> 0xf
	Execute: New cc = Z=0 S=0 O=0

Cycle 209. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x59
D: instr = mrmovl, rA = %esi, rB = %ebx, valC = 0x0, valP = 0x59, Stat = AOK
E: instr = jge, valC = 0x53, valA = 0x196, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = iaddl, Cnd = 1, valE = 0xf, valA = 0x0
   dstE = %edx, dstM = ----, Stat = AOK
W: instr = iaddl, valE = 0x584, valM = 0x0, dstE = %ecx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x59, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jge, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x584 to register %ecx

Cycle 210. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x5f
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x4, valP = 0x5f, Stat = AOK
E: instr = mrmovl, valC = 0x0, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %esi, Stat = AOK
M: instr = jge, Cnd = 1, valE = 0x0, valA = 0x196
   dstE = ----, dstM = ----, Stat = AOK
W: instr = iaddl, valE = 0xf, valM = 0x0, dstE = %edx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x5f, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x3f0 --> 0x3f0
	Writeback: Wrote 0xf to register %edx

Cycle 211. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x61
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x61, Stat = AOK
E: instr = mrmovl, valC = 0x4, valA = 0x3f0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f0, valA = 0x0
   dstE = ----, dstM = %esi, Stat = AOK
W: instr = jge, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x61, imem_instr = rmmovl, f_instr = rmmovl
	Memory: Read 0x1 from 0x3f0
	Execute: ALU: + 0x4 0x3f0 --> 0x3f4

Cycle 212. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x67
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x0, valP = 0x67, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x1, valB = 0x1
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f4, valA = 0x3f0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = mrmovl, valE = 0x3f0, valM = 0x1, dstE = ----, dstM = %esi, Stat = AOK
	Fetch: f_pc = 0x67, imem_instr = jle, f_instr = jle
	Memory: Read 0xfffffffe from 0x3f4
	Execute: ALU: & 0x1 0x1 --> 0x1
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x1 to register %esi

Cycle 213. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6c
D: instr = jle, rA = ----, rB = ----, valC = 0x72, valP = 0x6c, Stat = AOK
E: instr = rmmovl, valC = 0x0, valA = 0x1, valB = 0x584
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x1, valA = 0x1
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x3f4, valM = 0xfffffffe, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x6c, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x584 --> 0x584
	Writeback: Wrote 0xfffffffe to register %edi

Cycle 214. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x72
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x72, Stat = AOK
E: instr = jle, valC = 0x72, valA = 0x6c, valB = 0x584
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x584, valA = 0x1
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x1, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x72, imem_instr = rmmovl, f_instr = rmmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x1 to register %esi
	Wrote 0x1 to address 0x584

Cycle 215. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x78
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x6c
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x584, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x78, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 216. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x7a
D: instr = andl, rA = %edi, rB = %edi, valC = 0x0, valP = 0x7a, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x7a, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 217. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x85
D: instr = jle, rA = ----, rB = ----, valC = 0x85, valP = 0x7f, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0xfffffffe, valB = 0xfffffffe
   srcA = %edi, srcB = %edi, dstE = %edi, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x85, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: & 0xfffffffe 0xfffffffe --> 0xfffffffe
	Execute: New cc = Z=0 S=1 O=0

Cycle 218. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x8b
D: instr = mrmovl, rA = %esi, rB = %ebx, valC = 0x8, valP = 0x8b, Stat = AOK
E: instr = jle, valC = 0x85, valA = 0x7f, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0xfffffffe, valA = 0xfffffffe
   dstE = %edi, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x8b, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=1 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 219. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x91
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0xc, valP = 0x91, Stat = AOK
E: instr = mrmovl, valC = 0x8, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %esi, Stat = AOK
M: instr = jle, Cnd = 1, valE = 0x0, valA = 0x7f
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0xfffffffe, valM = 0x0, dstE = %edi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x91, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x8 0x3f0 --> 0x3f8
	Writeback: Wrote 0xfffffffe to register %edi

Cycle 220. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x93
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x93, Stat = AOK
E: instr = mrmovl, valC = 0xc, valA = 0x3f8, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f8, valA = 0x0
   dstE = ----, dstM = %esi, Stat = AOK
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x93, imem_instr = rmmovl, f_instr = rmmovl
	Memory: Read 0x3 from 0x3f8
	Execute: ALU: + 0xc 0x3f0 --> 0x3fc

Cycle 221. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x99
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x8, valP = 0x99, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3fc, valA = 0x3f8
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = mrmovl, valE = 0x3f8, valM = 0x3, dstE = ----, dstM = %esi, Stat = AOK
	Fetch: f_pc = 0x99, imem_instr = jle, f_instr = jle
	Memory: Read 0x4 from 0x3fc
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x3 to register %esi

Cycle 222. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xa4
D: instr = jle, rA = ----, rB = ----, valC = 0xa4, valP = 0x9e, Stat = AOK
E: instr = rmmovl, valC = 0x8, valA = 0x3, valB = 0x584
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 1, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x3fc, valM = 0x4, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0xa4, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x8 0x584 --> 0x58c
	Writeback: Wrote 0x4 to register %edi

Cycle 223. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xa6
D: instr = andl, rA = %edi, rB = %edi, valC = 0x0, valP = 0xa6, Stat = AOK
E: instr = jle, valC = 0xa4, valA = 0x9e, valB = 0x58c
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x58c, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xa6, imem_instr = rmmovl, f_instr = rmmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x58c

Cycle 224. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xac
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x9e
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x58c, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xac, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 225. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xb1
D: instr = jle, rA = ----, rB = ----, valC = 0xb7, valP = 0xb1, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xb1, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 226. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xb7
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0xb7, Stat = AOK
E: instr = jle, valC = 0xb7, valA = 0xb1, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xb7, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 227. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xbd
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xb1
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xbd, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 228. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc3
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x14, valP = 0xc3, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc3, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 229. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc5
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0xc5, Stat = AOK
E: instr = mrmovl, valC = 0x14, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xc5, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x14 0x3f0 --> 0x404

Cycle 230. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xcb
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x10, valP = 0xcb, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x404, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xcb, imem_instr = jle, f_instr = jle
	Memory: Read 0x6 from 0x404
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 231. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd0
D: instr = jle, rA = ----, rB = ----, valC = 0xd6, valP = 0xd0, Stat = AOK
E: instr = rmmovl, valC = 0x10, valA = 0x3, valB = 0x584
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x404, valM = 0x6, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0xd0, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x10 0x584 --> 0x594
	Writeback: Wrote 0x6 to register %edi

Cycle 232. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd6
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0xd6, Stat = AOK
E: instr = jle, valC = 0xd6, valA = 0xd0, valB = 0x594
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x594, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xd6, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x594

Cycle 233. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd8
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xd0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x594, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xd8, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 234. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xde
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x14, valP = 0xde, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xde, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 235. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xe3
D: instr = jle, rA = ----, rB = ----, valC = 0xe9, valP = 0xe3, Stat = AOK
E: instr = rmmovl, valC = 0x14, valA = 0x6, valB = 0x584
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xe3, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x14 0x584 --> 0x598

Cycle 236. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xe9
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0xe9, Stat = AOK
E: instr = jle, valC = 0xe9, valA = 0xe3, valB = 0x598
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x598, valA = 0x6
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xe9, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0x6 to address 0x598

Cycle 237. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xef
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xe3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x598, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xef, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 238. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf5
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x1c, valP = 0xf5, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xf5, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 239. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf7
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0xf7, Stat = AOK
E: instr = mrmovl, valC = 0x1c, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xf7, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x1c 0x3f0 --> 0x40c

Cycle 240. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xfd
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x18, valP = 0xfd, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x40c, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xfd, imem_instr = jle, f_instr = jle
	Memory: Read 0xfffffff8 from 0x40c
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 241. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x102
D: instr = jle, rA = ----, rB = ----, valC = 0x108, valP = 0x102, Stat = AOK
E: instr = rmmovl, valC = 0x18, valA = 0x3, valB = 0x584
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x40c, valM = 0xfffffff8, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x102, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x18 0x584 --> 0x59c
	Writeback: Wrote 0xfffffff8 to register %edi

Cycle 242. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x108
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x108, Stat = AOK
E: instr = jle, valC = 0x108, valA = 0x102, valB = 0x59c
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x59c, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x108, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x59c

Cycle 243. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x10a
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x102
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x59c, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x10a, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 244. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x110
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x1c, valP = 0x110, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x110, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 245. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x115
D: instr = jle, rA = ----, rB = ----, valC = 0x11b, valP = 0x115, Stat = AOK
E: instr = rmmovl, valC = 0x1c, valA = 0xfffffff8, valB = 0x584
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x115, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x1c 0x584 --> 0x5a0

Cycle 246. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x11b
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x11b, Stat = AOK
E: instr = jle, valC = 0x11b, valA = 0x115, valB = 0x5a0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5a0, valA = 0xfffffff8
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x11b, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xfffffff8 to address 0x5a0

Cycle 247. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x121
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x115
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5a0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x121, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 248. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x127
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x24, valP = 0x127, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x127, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 249. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x129
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x129, Stat = AOK
E: instr = mrmovl, valC = 0x24, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x129, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x24 0x3f0 --> 0x414

Cycle 250. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x12f
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x20, valP = 0x12f, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x414, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x12f, imem_instr = jle, f_instr = jle
	Memory: Read 0xa from 0x414
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 251. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x134
D: instr = jle, rA = ----, rB = ----, valC = 0x13a, valP = 0x134, Stat = AOK
E: instr = rmmovl, valC = 0x20, valA = 0x3, valB = 0x584
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x414, valM = 0xa, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x134, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x20 0x584 --> 0x5a4
	Writeback: Wrote 0xa to register %edi

Cycle 252. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x13a
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x13a, Stat = AOK
E: instr = jle, valC = 0x13a, valA = 0x134, valB = 0x5a4
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5a4, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x13a, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x5a4

Cycle 253. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x13c
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x134
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5a4, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x13c, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 254. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x142
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x24, valP = 0x142, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x142, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 255. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x147
D: instr = jle, rA = ----, rB = ----, valC = 0x14d, valP = 0x147, Stat = AOK
E: instr = rmmovl, valC = 0x24, valA = 0xa, valB = 0x584
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x147, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x24 0x584 --> 0x5a8

Cycle 256. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x14d
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x14d, Stat = AOK
E: instr = jle, valC = 0x14d, valA = 0x147, valB = 0x5a8
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5a8, valA = 0xa
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x14d, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xa to address 0x5a8

Cycle 257. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x153
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x147
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5a8, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x153, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 258. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x159
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x2c, valP = 0x159, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x159, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 259. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x15b
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x15b, Stat = AOK
E: instr = mrmovl, valC = 0x2c, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x15b, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x2c 0x3f0 --> 0x41c

Cycle 260. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x161
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x28, valP = 0x161, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x41c, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x161, imem_instr = jle, f_instr = jle
	Memory: Read 0xc from 0x41c
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 261. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x166
D: instr = jle, rA = ----, rB = ----, valC = 0x16c, valP = 0x166, Stat = AOK
E: instr = rmmovl, valC = 0x28, valA = 0x3, valB = 0x584
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x41c, valM = 0xc, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x166, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x28 0x584 --> 0x5ac
	Writeback: Wrote 0xc to register %edi

Cycle 262. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x16c
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x16c, Stat = AOK
E: instr = jle, valC = 0x16c, valA = 0x166, valB = 0x5ac
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5ac, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x16c, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x5ac

Cycle 263. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x16e
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x166
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5ac, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x16e, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 264. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x174
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x2c, valP = 0x174, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x174, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 265. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x179
D: instr = jle, rA = ----, rB = ----, valC = 0x17f, valP = 0x179, Stat = AOK
E: instr = rmmovl, valC = 0x2c, valA = 0xc, valB = 0x584
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x179, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x2c 0x584 --> 0x5b0

Cycle 266. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x17f
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x17f, Stat = AOK
E: instr = jle, valC = 0x17f, valA = 0x179, valB = 0x5b0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5b0, valA = 0xc
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x17f, imem_instr = iaddl, f_instr = iaddl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xc to address 0x5b0

Cycle 267. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x185
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x179
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5b0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x185, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 268. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x18b
D: instr = iaddl, rA = ----, rB = %ecx, valC = 0x30, valP = 0x18b, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x18b, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 269. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x191
D: instr = iaddl, rA = ----, rB = %edx, valC = 0xfffffff4, valP = 0x191, Stat = AOK
E: instr = iaddl, valC = 0x30, valA = 0x0, valB = 0x584
   srcA = ----, srcB = %ecx, dstE = %ecx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x191, imem_instr = jge, f_instr = jge
	Execute: ALU: + 0x30 0x584 --> 0x5b4
	Execute: New cc = Z=0 S=0 O=0

Cycle 270. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x53
D: instr = jge, rA = ----, rB = ----, valC = 0x53, valP = 0x196, Stat = AOK
E: instr = iaddl, valC = 0xfffffff4, valA = 0x0, valB = 0xf
   srcA = ----, srcB = %edx, dstE = %edx, dstM = ----, Stat = AOK
M: instr = iaddl, Cnd = 1, valE = 0x5b4, valA = 0x0
   dstE = %ecx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x53, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0xfffffff4 0xf --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 271. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x59
D: instr = mrmovl, rA = %esi, rB = %ebx, valC = 0x0, valP = 0x59, Stat = AOK
E: instr = jge, valC = 0x53, valA = 0x196, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = iaddl, Cnd = 1, valE = 0x3, valA = 0x0
   dstE = %edx, dstM = ----, Stat = AOK
W: instr = iaddl, valE = 0x5b4, valM = 0x0, dstE = %ecx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x59, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jge, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x5b4 to register %ecx

Cycle 272. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x5f
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x4, valP = 0x5f, Stat = AOK
E: instr = mrmovl, valC = 0x0, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %esi, Stat = AOK
M: instr = jge, Cnd = 1, valE = 0x0, valA = 0x196
   dstE = ----, dstM = ----, Stat = AOK
W: instr = iaddl, valE = 0x3, valM = 0x0, dstE = %edx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x5f, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x3f0 --> 0x3f0
	Writeback: Wrote 0x3 to register %edx

Cycle 273. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x61
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x61, Stat = AOK
E: instr = mrmovl, valC = 0x4, valA = 0x3f0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f0, valA = 0x0
   dstE = ----, dstM = %esi, Stat = AOK
W: instr = jge, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x61, imem_instr = rmmovl, f_instr = rmmovl
	Memory: Read 0x1 from 0x3f0
	Execute: ALU: + 0x4 0x3f0 --> 0x3f4

Cycle 274. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x67
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x0, valP = 0x67, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x1, valB = 0x1
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f4, valA = 0x3f0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = mrmovl, valE = 0x3f0, valM = 0x1, dstE = ----, dstM = %esi, Stat = AOK
	Fetch: f_pc = 0x67, imem_instr = jle, f_instr = jle
	Memory: Read 0xfffffffe from 0x3f4
	Execute: ALU: & 0x1 0x1 --> 0x1
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x1 to register %esi

Cycle 275. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6c
D: instr = jle, rA = ----, rB = ----, valC = 0x72, valP = 0x6c, Stat = AOK
E: instr = rmmovl, valC = 0x0, valA = 0x1, valB = 0x5b4
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x1, valA = 0x1
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x3f4, valM = 0xfffffffe, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x6c, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x5b4 --> 0x5b4
	Writeback: Wrote 0xfffffffe to register %edi

Cycle 276. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x72
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x72, Stat = AOK
E: instr = jle, valC = 0x72, valA = 0x6c, valB = 0x5b4
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5b4, valA = 0x1
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x1, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x72, imem_instr = rmmovl, f_instr = rmmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x1 to register %esi
	Wrote 0x1 to address 0x5b4

Cycle 277. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x78
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x6c
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5b4, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x78, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 278. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x7a
D: instr = andl, rA = %edi, rB = %edi, valC = 0x0, valP = 0x7a, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x7a, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 279. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x85
D: instr = jle, rA = ----, rB = ----, valC = 0x85, valP = 0x7f, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0xfffffffe, valB = 0xfffffffe
   srcA = %edi, srcB = %edi, dstE = %edi, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x85, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: & 0xfffffffe 0xfffffffe --> 0xfffffffe
	Execute: New cc = Z=0 S=1 O=0

Cycle 280. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x8b
D: instr = mrmovl, rA = %esi, rB = %ebx, valC = 0x8, valP = 0x8b, Stat = AOK
E: instr = jle, valC = 0x85, valA = 0x7f, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0xfffffffe, valA = 0xfffffffe
   dstE = %edi, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x8b, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=1 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 281. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x91
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0xc, valP = 0x91, Stat = AOK
E: instr = mrmovl, valC = 0x8, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %esi, Stat = AOK
M: instr = jle, Cnd = 1, valE = 0x0, valA = 0x7f
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0xfffffffe, valM = 0x0, dstE = %edi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x91, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x8 0x3f0 --> 0x3f8
	Writeback: Wrote 0xfffffffe to register %edi

Cycle 282. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x93
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x93, Stat = AOK
E: instr = mrmovl, valC = 0xc, valA = 0x3f8, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f8, valA = 0x0
   dstE = ----, dstM = %esi, Stat = AOK
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x93, imem_instr = rmmovl, f_instr = rmmovl
	Memory: Read 0x3 from 0x3f8
	Execute: ALU: + 0xc 0x3f0 --> 0x3fc

Cycle 283. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x99
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x8, valP = 0x99, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3fc, valA = 0x3f8
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = mrmovl, valE = 0x3f8, valM = 0x3, dstE = ----, dstM = %esi, Stat = AOK
	Fetch: f_pc = 0x99, imem_instr = jle, f_instr = jle
	Memory: Read 0x4 from 0x3fc
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x3 to register %esi

Cycle 284. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xa4
D: instr = jle, rA = ----, rB = ----, valC = 0xa4, valP = 0x9e, Stat = AOK
E: instr = rmmovl, valC = 0x8, valA = 0x3, valB = 0x5b4
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 1, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x3fc, valM = 0x4, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0xa4, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x8 0x5b4 --> 0x5bc
	Writeback: Wrote 0x4 to register %edi

Cycle 285. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xa6
D: instr = andl, rA = %edi, rB = %edi, valC = 0x0, valP = 0xa6, Stat = AOK
E: instr = jle, valC = 0xa4, valA = 0x9e, valB = 0x5bc
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5bc, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xa6, imem_instr = rmmovl, f_instr = rmmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x5bc

Cycle 286. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xac
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x9e
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5bc, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xac, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 287. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xb1
D: instr = jle, rA = ----, rB = ----, valC = 0xb7, valP = 0xb1, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xb1, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 288. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xb7
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0xb7, Stat = AOK
E: instr = jle, valC = 0xb7, valA = 0xb1, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xb7, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 289. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xbd
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xb1
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xbd, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 290. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc3
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x14, valP = 0xc3, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc3, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 291. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc5
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0xc5, Stat = AOK
E: instr = mrmovl, valC = 0x14, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xc5, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x14 0x3f0 --> 0x404

Cycle 292. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xcb
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x10, valP = 0xcb, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x404, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xcb, imem_instr = jle, f_instr = jle
	Memory: Read 0x6 from 0x404
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 293. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd0
D: instr = jle, rA = ----, rB = ----, valC = 0xd6, valP = 0xd0, Stat = AOK
E: instr = rmmovl, valC = 0x10, valA = 0x3, valB = 0x5b4
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x404, valM = 0x6, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0xd0, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x10 0x5b4 --> 0x5c4
	Writeback: Wrote 0x6 to register %edi

Cycle 294. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd6
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0xd6, Stat = AOK
E: instr = jle, valC = 0xd6, valA = 0xd0, valB = 0x5c4
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5c4, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xd6, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x5c4

Cycle 295. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xd8
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xd0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5c4, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xd8, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 296. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xde
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x14, valP = 0xde, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xde, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 297. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xe3
D: instr = jle, rA = ----, rB = ----, valC = 0xe9, valP = 0xe3, Stat = AOK
E: instr = rmmovl, valC = 0x14, valA = 0x6, valB = 0x5b4
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xe3, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x14 0x5b4 --> 0x5c8

Cycle 298. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xe9
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0xe9, Stat = AOK
E: instr = jle, valC = 0xe9, valA = 0xe3, valB = 0x5c8
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5c8, valA = 0x6
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xe9, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0x6 to address 0x5c8

Cycle 299. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xef
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xe3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5c8, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xef, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 300. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf5
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x1c, valP = 0xf5, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xf5, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 301. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf7
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0xf7, Stat = AOK
E: instr = mrmovl, valC = 0x1c, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xf7, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x1c 0x3f0 --> 0x40c

Cycle 302. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xfd
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x18, valP = 0xfd, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x40c, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xfd, imem_instr = jle, f_instr = jle
	Memory: Read 0xfffffff8 from 0x40c
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 303. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x102
D: instr = jle, rA = ----, rB = ----, valC = 0x108, valP = 0x102, Stat = AOK
E: instr = rmmovl, valC = 0x18, valA = 0x3, valB = 0x5b4
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x40c, valM = 0xfffffff8, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x102, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x18 0x5b4 --> 0x5cc
	Writeback: Wrote 0xfffffff8 to register %edi

Cycle 304. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x108
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x108, Stat = AOK
E: instr = jle, valC = 0x108, valA = 0x102, valB = 0x5cc
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5cc, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x108, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x5cc

Cycle 305. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x10a
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x102
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5cc, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x10a, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 306. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x110
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x1c, valP = 0x110, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x110, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 307. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x115
D: instr = jle, rA = ----, rB = ----, valC = 0x11b, valP = 0x115, Stat = AOK
E: instr = rmmovl, valC = 0x1c, valA = 0xfffffff8, valB = 0x5b4
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x115, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x1c 0x5b4 --> 0x5d0

Cycle 308. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x11b
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x11b, Stat = AOK
E: instr = jle, valC = 0x11b, valA = 0x115, valB = 0x5d0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5d0, valA = 0xfffffff8
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x11b, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xfffffff8 to address 0x5d0

Cycle 309. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x121
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x115
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5d0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x121, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 310. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x127
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x24, valP = 0x127, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x127, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 311. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x129
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x129, Stat = AOK
E: instr = mrmovl, valC = 0x24, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x129, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x24 0x3f0 --> 0x414

Cycle 312. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x12f
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x20, valP = 0x12f, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x414, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x12f, imem_instr = jle, f_instr = jle
	Memory: Read 0xa from 0x414
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 313. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x134
D: instr = jle, rA = ----, rB = ----, valC = 0x13a, valP = 0x134, Stat = AOK
E: instr = rmmovl, valC = 0x20, valA = 0x3, valB = 0x5b4
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x414, valM = 0xa, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x134, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x20 0x5b4 --> 0x5d4
	Writeback: Wrote 0xa to register %edi

Cycle 314. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x13a
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x13a, Stat = AOK
E: instr = jle, valC = 0x13a, valA = 0x134, valB = 0x5d4
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5d4, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x13a, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x5d4

Cycle 315. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x13c
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x134
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5d4, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x13c, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 316. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x142
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x24, valP = 0x142, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x142, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 317. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x147
D: instr = jle, rA = ----, rB = ----, valC = 0x14d, valP = 0x147, Stat = AOK
E: instr = rmmovl, valC = 0x24, valA = 0xa, valB = 0x5b4
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x147, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x24 0x5b4 --> 0x5d8

Cycle 318. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x14d
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x14d, Stat = AOK
E: instr = jle, valC = 0x14d, valA = 0x147, valB = 0x5d8
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5d8, valA = 0xa
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x14d, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xa to address 0x5d8

Cycle 319. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x153
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x147
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5d8, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x153, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 320. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x159
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x2c, valP = 0x159, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x159, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 321. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x15b
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x15b, Stat = AOK
E: instr = mrmovl, valC = 0x2c, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x15b, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x2c 0x3f0 --> 0x41c

Cycle 322. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x161
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x28, valP = 0x161, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x41c, valA = 0x0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x161, imem_instr = jle, f_instr = jle
	Memory: Read 0xc from 0x41c
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 323. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x166
D: instr = jle, rA = ----, rB = ----, valC = 0x16c, valP = 0x166, Stat = AOK
E: instr = rmmovl, valC = 0x28, valA = 0x3, valB = 0x5b4
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x41c, valM = 0xc, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x166, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x28 0x5b4 --> 0x5dc
	Writeback: Wrote 0xc to register %edi

Cycle 324. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x16c
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x16c, Stat = AOK
E: instr = jle, valC = 0x16c, valA = 0x166, valB = 0x5dc
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5dc, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x16c, imem_instr = andl, f_instr = andl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x5dc

Cycle 325. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x16e
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x166
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5dc, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x16e, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 326. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x174
D: instr = rmmovl, rA = %edi, rB = %ecx, valC = 0x2c, valP = 0x174, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x174, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 327. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x179
D: instr = jle, rA = ----, rB = ----, valC = 0x17f, valP = 0x179, Stat = AOK
E: instr = rmmovl, valC = 0x2c, valA = 0xc, valB = 0x5b4
   srcA = %edi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x179, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x2c 0x5b4 --> 0x5e0

Cycle 328. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x17f
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x17f, Stat = AOK
E: instr = jle, valC = 0x17f, valA = 0x179, valB = 0x5e0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5e0, valA = 0xc
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x17f, imem_instr = iaddl, f_instr = iaddl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0xc to address 0x5e0

Cycle 329. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x185
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x179
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5e0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x185, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 330. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x18b
D: instr = iaddl, rA = ----, rB = %ecx, valC = 0x30, valP = 0x18b, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x18b, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 331. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x191
D: instr = iaddl, rA = ----, rB = %edx, valC = 0xfffffff4, valP = 0x191, Stat = AOK
E: instr = iaddl, valC = 0x30, valA = 0x0, valB = 0x5b4
   srcA = ----, srcB = %ecx, dstE = %ecx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x191, imem_instr = jge, f_instr = jge
	Execute: ALU: + 0x30 0x5b4 --> 0x5e4
	Execute: New cc = Z=0 S=0 O=0

Cycle 332. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x53
D: instr = jge, rA = ----, rB = ----, valC = 0x53, valP = 0x196, Stat = AOK
E: instr = iaddl, valC = 0xfffffff4, valA = 0x0, valB = 0x3
   srcA = ----, srcB = %edx, dstE = %edx, dstM = ----, Stat = AOK
M: instr = iaddl, Cnd = 1, valE = 0x5e4, valA = 0x0
   dstE = %ecx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x53, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0xfffffff4 0x3 --> 0xfffffff7
	Execute: New cc = Z=0 S=1 O=0

Cycle 333. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x59
D: instr = mrmovl, rA = %esi, rB = %ebx, valC = 0x0, valP = 0x59, Stat = AOK
E: instr = jge, valC = 0x53, valA = 0x196, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = iaddl, Cnd = 1, valE = 0xfffffff7, valA = 0x0
   dstE = %edx, dstM = ----, Stat = AOK
W: instr = iaddl, valE = 0x5e4, valM = 0x0, dstE = %ecx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x59, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jge, cc = Z=0 S=1 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x5e4 to register %ecx

Cycle 334. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x5f
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x4, valP = 0x5f, Stat = AOK
E: instr = mrmovl, valC = 0x0, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %esi, Stat = AOK
M: instr = jge, Cnd = 0, valE = 0x0, valA = 0x196
   dstE = ----, dstM = ----, Stat = AOK
W: instr = iaddl, valE = 0xfffffff7, valM = 0x0, dstE = %edx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x196, imem_instr = addl, f_instr = addl
	Execute: ALU: + 0x0 0x3f0 --> 0x3f0
	Writeback: Wrote 0xfffffff7 to register %edx

Cycle 335. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x198
D: instr = addl, rA = %edx, rB = %edx, valC = 0x0, valP = 0x198, Stat = AOK
E: instr = mrmovl, valC = 0x4, valA = 0x3f0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f0, valA = 0x0
   dstE = ----, dstM = %esi, Stat = AOK
W: instr = jge, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x198, imem_instr = addl, f_instr = addl
	Memory: Read 0x1 from 0x3f0
	Execute: ALU: + 0x4 0x3f0 --> 0x3f4

Cycle 336. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x19a
D: instr = addl, rA = %edx, rB = %edx, valC = 0x0, valP = 0x19a, Stat = AOK
E: instr = addl, valC = 0x0, valA = 0xfffffff7, valB = 0xfffffff7
   srcA = %edx, srcB = %edx, dstE = %edx, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f4, valA = 0x3f0
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = mrmovl, valE = 0x3f0, valM = 0x1, dstE = ----, dstM = %esi, Stat = AOK
	Fetch: f_pc = 0x19a, imem_instr = mrmovl, f_instr = mrmovl
	Memory: Read 0xfffffffe from 0x3f4
	Execute: ALU: + 0xfffffff7 0xfffffff7 --> 0xffffffee
	Execute: New cc = Z=0 S=1 O=0
	Writeback: Wrote 0x1 to register %esi

Cycle 337. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x1a0
D: instr = mrmovl, rA = %esi, rB = %edx, valC = 0x3f0, valP = 0x1a0, Stat = AOK
E: instr = addl, valC = 0x0, valA = 0xffffffee, valB = 0xffffffee
   srcA = %edx, srcB = %edx, dstE = %edx, dstM = ----, Stat = AOK
M: instr = addl, Cnd = 1, valE = 0xffffffee, valA = 0xfffffff7
   dstE = %edx, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x3f4, valM = 0xfffffffe, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x1a0, imem_instr = pushl, f_instr = pushl
	Execute: ALU: + 0xffffffee 0xffffffee --> 0xffffffdc
	Execute: New cc = Z=0 S=1 O=0
	Writeback: Wrote 0xfffffffe to register %edi

Cycle 338. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x1a2
D: instr = pushl, rA = %esi, rB = ----, valC = 0x0, valP = 0x1a2, Stat = AOK
E: instr = mrmovl, valC = 0x3f0, valA = 0x0, valB = 0xffffffdc
   srcA = ----, srcB = %edx, dstE = ----, dstM = %esi, Stat = AOK
M: instr = addl, Cnd = 1, valE = 0xffffffdc, valA = 0xffffffee
   dstE = %edx, dstM = ----, Stat = AOK
W: instr = addl, valE = 0xffffffee, valM = 0x0, dstE = %edx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x1a2, imem_instr = ret, f_instr = ret
	Execute: ALU: + 0x3f0 0xffffffdc --> 0x3cc
	Writeback: Wrote 0xffffffee to register %edx

Cycle 339. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x1a2
D: instr = pushl, rA = %esi, rB = ----, valC = 0x0, valP = 0x1a2, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovl, Cnd = 1, valE = 0x3cc, valA = 0x0
   dstE = ----, dstM = %esi, Stat = AOK
W: instr = addl, valE = 0xffffffdc, valM = 0x0, dstE = %edx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x1a2, imem_instr = ret, f_instr = ret
	Memory: Read 0x36a from 0x3cc
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0xffffffdc to register %edx

Cycle 340. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x1a3
D: instr = ret, rA = ----, rB = ----, valC = 0x0, valP = 0x1a3, Stat = AOK
E: instr = pushl, valC = 0x0, valA = 0x36a, valB = 0x614
   srcA = %esi, srcB = %esp, dstE = %esp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovl, valE = 0x3cc, valM = 0x36a, dstE = ----, dstM = %esi, Stat = AOK
	Fetch: f_pc = 0x1a3, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0xfffffffc 0x614 --> 0x610
	Writeback: Wrote 0x36a to register %esi

Cycle 341. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x1a3
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = ret, valC = 0x0, valA = 0x610, valB = 0x610
   srcA = %esp, srcB = %esp, dstE = %esp, dstM = ----, Stat = AOK
M: instr = pushl, Cnd = 1, valE = 0x610, valA = 0x36a
   dstE = %esp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x1a3, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x4 0x610 --> 0x614
	Wrote 0x36a to address 0x610

Cycle 342. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x1a3
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = ret, Cnd = 1, valE = 0x614, valA = 0x610
   dstE = %esp, dstM = ----, Stat = AOK
W: instr = pushl, valE = 0x610, valM = 0x0, dstE = %esp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x1a3, imem_instr = mrmovl, f_instr = mrmovl
	Memory: Read 0x36a from 0x610
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x610 to register %esp

Cycle 343. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x1a3
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = ret, valE = 0x614, valM = 0x36a, dstE = %esp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x36a, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x614 to register %esp

Cycle 344. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x370
D: instr = mrmovl, rA = %esi, rB = %ebx, valC = 0x8, valP = 0x370, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x370, imem_instr = mrmovl, f_instr = mrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 345. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x376
D: instr = mrmovl, rA = %edi, rB = %ebx, valC = 0x4, valP = 0x376, Stat = AOK
E: instr = mrmovl, valC = 0x8, valA = 0x0, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %esi, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x376, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x8 0x3f0 --> 0x3f8

Cycle 346. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x378
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x378, Stat = AOK
E: instr = mrmovl, valC = 0x4, valA = 0x3f8, valB = 0x3f0
   srcA = ----, srcB = %ebx, dstE = ----, dstM = %edi, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f8, valA = 0x0
   dstE = ----, dstM = %esi, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x378, imem_instr = rmmovl, f_instr = rmmovl
	Memory: Read 0x3 from 0x3f8
	Execute: ALU: + 0x4 0x3f0 --> 0x3f4

Cycle 347. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x37e
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x8, valP = 0x37e, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = mrmovl, Cnd = 1, valE = 0x3f4, valA = 0x3f8
   dstE = ----, dstM = %edi, Stat = AOK
W: instr = mrmovl, valE = 0x3f8, valM = 0x3, dstE = ----, dstM = %esi, Stat = AOK
	Fetch: f_pc = 0x37e, imem_instr = jle, f_instr = jle
	Memory: Read 0xfffffffe from 0x3f4
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x3 to register %esi

Cycle 348. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x389
D: instr = jle, rA = ----, rB = ----, valC = 0x389, valP = 0x383, Stat = AOK
E: instr = rmmovl, valC = 0x8, valA = 0x3, valB = 0x5e4
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 1, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = mrmovl, valE = 0x3f4, valM = 0xfffffffe, dstE = ----, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x389, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x8 0x5e4 --> 0x5ec
	Writeback: Wrote 0xfffffffe to register %edi

Cycle 349. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x38b
D: instr = andl, rA = %edi, rB = %edi, valC = 0x0, valP = 0x38b, Stat = AOK
E: instr = jle, valC = 0x389, valA = 0x383, valB = 0x5ec
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5ec, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x38b, imem_instr = rmmovl, f_instr = rmmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %esi
	Wrote 0x3 to address 0x5ec

Cycle 350. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x391
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x383
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5ec, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x391, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 351. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x396
D: instr = jle, rA = ----, rB = ----, valC = 0x39c, valP = 0x396, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x396, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 352. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x39c
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x39c, Stat = AOK
E: instr = jle, valC = 0x39c, valA = 0x396, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x39c, imem_instr = mrmovl, f_instr = mrmovl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 353. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3a2
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x396
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x3a2, imem_instr = rmmovl, f_instr = rmmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 354. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3a8
D: instr = rmmovl, rA = %esi, rB = %ecx, valC = 0x0, valP = 0x3a8, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3a8, imem_instr = andl, f_instr = andl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 355. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3aa
D: instr = andl, rA = %esi, rB = %esi, valC = 0x0, valP = 0x3aa, Stat = AOK
E: instr = rmmovl, valC = 0x0, valA = 0x3, valB = 0x5e4
   srcA = %esi, srcB = %ecx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x3aa, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x5e4 --> 0x5e4

Cycle 356. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3b5
D: instr = jle, rA = ----, rB = ----, valC = 0x3b5, valP = 0x3af, Stat = AOK
E: instr = andl, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %esi, srcB = %esi, dstE = %esi, dstM = ----, Stat = AOK
M: instr = rmmovl, Cnd = 1, valE = 0x5e4, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x3b5, imem_instr = popl, f_instr = popl
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0
	Wrote 0x3 to address 0x5e4

Cycle 357. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3b7
D: instr = popl, rA = %edi, rB = ----, valC = 0x0, valP = 0x3b7, Stat = AOK
E: instr = jle, valC = 0x3b5, valA = 0x3af, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andl, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %esi, dstM = ----, Stat = AOK
W: instr = rmmovl, valE = 0x5e4, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3b7, imem_instr = popl, f_instr = popl
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 358. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3b9
D: instr = popl, rA = %ebx, rB = ----, valC = 0x0, valP = 0x3b9, Stat = AOK
E: instr = popl, valC = 0x0, valA = 0x614, valB = 0x614
   srcA = %esp, srcB = %esp, dstE = %esp, dstM = %edi, Stat = AOK
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x3af
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andl, valE = 0x3, valM = 0x0, dstE = %esi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3af, imem_instr = iaddl, f_instr = iaddl
	Execute: ALU: + 0x4 0x614 --> 0x618
	Writeback: Wrote 0x3 to register %esi

Cycle 359. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3b5
D: instr = iaddl, rA = ----, rB = %eax, valC = 0x1, valP = 0x3b5, Stat = AOK
E: instr = popl, valC = 0x0, valA = 0x618, valB = 0x618
   srcA = %esp, srcB = %esp, dstE = %esp, dstM = %ebx, Stat = AOK
M: instr = popl, Cnd = 1, valE = 0x618, valA = 0x614
   dstE = %esp, dstM = %edi, Stat = AOK
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3b5, imem_instr = popl, f_instr = popl
	Memory: Read 0x0 from 0x614
	Execute: ALU: + 0x4 0x618 --> 0x61c

Cycle 360. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3b7
D: instr = popl, rA = %edi, rB = ----, valC = 0x0, valP = 0x3b7, Stat = AOK
E: instr = iaddl, valC = 0x1, valA = 0x0, valB = 0x0
   srcA = ----, srcB = %eax, dstE = %eax, dstM = ----, Stat = AOK
M: instr = popl, Cnd = 1, valE = 0x61c, valA = 0x618
   dstE = %esp, dstM = %ebx, Stat = AOK
W: instr = popl, valE = 0x618, valM = 0x0, dstE = %esp, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x3b7, imem_instr = popl, f_instr = popl
	Memory: Read 0x0 from 0x618
	Execute: ALU: + 0x1 0x0 --> 0x1
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x618 to register %esp
	Writeback: Wrote 0x0 to register %edi

Cycle 361. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3b9
D: instr = popl, rA = %ebx, rB = ----, valC = 0x0, valP = 0x3b9, Stat = AOK
E: instr = popl, valC = 0x0, valA = 0x61c, valB = 0x61c
   srcA = %esp, srcB = %esp, dstE = %esp, dstM = %edi, Stat = AOK
M: instr = iaddl, Cnd = 1, valE = 0x1, valA = 0x0
   dstE = %eax, dstM = ----, Stat = AOK
W: instr = popl, valE = 0x61c, valM = 0x0, dstE = %esp, dstM = %ebx, Stat = AOK
	Fetch: f_pc = 0x3b9, imem_instr = popl, f_instr = popl
	Execute: ALU: + 0x4 0x61c --> 0x620
	Writeback: Wrote 0x61c to register %esp
	Writeback: Wrote 0x0 to register %ebx

Cycle 362. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3bb
D: instr = popl, rA = %esi, rB = ----, valC = 0x0, valP = 0x3bb, Stat = AOK
E: instr = popl, valC = 0x0, valA = 0x620, valB = 0x620
   srcA = %esp, srcB = %esp, dstE = %esp, dstM = %ebx, Stat = AOK
M: instr = popl, Cnd = 1, valE = 0x620, valA = 0x61c
   dstE = %esp, dstM = %edi, Stat = AOK
W: instr = iaddl, valE = 0x1, valM = 0x0, dstE = %eax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3bb, imem_instr = rrmovl, f_instr = rrmovl
	Memory: Read 0x0 from 0x61c
	Execute: ALU: + 0x4 0x620 --> 0x624
	Writeback: Wrote 0x1 to register %eax

Cycle 363. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3bd
D: instr = rrmovl, rA = %ebp, rB = %esp, valC = 0x0, valP = 0x3bd, Stat = AOK
E: instr = popl, valC = 0x0, valA = 0x624, valB = 0x624
   srcA = %esp, srcB = %esp, dstE = %esp, dstM = %esi, Stat = AOK
M: instr = popl, Cnd = 1, valE = 0x624, valA = 0x620
   dstE = %esp, dstM = %ebx, Stat = AOK
W: instr = popl, valE = 0x620, valM = 0x0, dstE = %esp, dstM = %edi, Stat = AOK
	Fetch: f_pc = 0x3bd, imem_instr = popl, f_instr = popl
	Memory: Read 0x634 from 0x620
	Execute: ALU: + 0x4 0x624 --> 0x628
	Writeback: Wrote 0x620 to register %esp
	Writeback: Wrote 0x0 to register %edi

Cycle 364. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3bf
D: instr = popl, rA = %ebp, rB = ----, valC = 0x0, valP = 0x3bf, Stat = AOK
E: instr = rrmovl, valC = 0x0, valA = 0x620, valB = 0x0
   srcA = %ebp, srcB = ----, dstE = %esp, dstM = ----, Stat = AOK
M: instr = popl, Cnd = 1, valE = 0x628, valA = 0x624
   dstE = %esp, dstM = %esi, Stat = AOK
W: instr = popl, valE = 0x624, valM = 0x634, dstE = %esp, dstM = %ebx, Stat = AOK
	Fetch: f_pc = 0x3bf, imem_instr = ret, f_instr = ret
	Memory: Read 0x29 from 0x624
	Execute: ALU: + 0x620 0x0 --> 0x620
	Writeback: Wrote 0x624 to register %esp
	Writeback: Wrote 0x634 to register %ebx

Cycle 365. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3c0
D: instr = ret, rA = ----, rB = ----, valC = 0x0, valP = 0x3c0, Stat = AOK
E: instr = popl, valC = 0x0, valA = 0x620, valB = 0x620
   srcA = %esp, srcB = %esp, dstE = %esp, dstM = %ebp, Stat = AOK
M: instr = rrmovl, Cnd = 1, valE = 0x620, valA = 0x620
   dstE = %esp, dstM = ----, Stat = AOK
W: instr = popl, valE = 0x628, valM = 0x29, dstE = %esp, dstM = %esi, Stat = AOK
	Fetch: f_pc = 0x3c0, imem_instr = <bad>, f_instr = <bad>
	Execute: ALU: + 0x4 0x620 --> 0x624
	Writeback: Wrote 0x628 to register %esp
	Writeback: Wrote 0x29 to register %esi

Cycle 366. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3c0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = ret, valC = 0x0, valA = 0x624, valB = 0x624
   srcA = %esp, srcB = %esp, dstE = %esp, dstM = ----, Stat = AOK
M: instr = popl, Cnd = 1, valE = 0x624, valA = 0x620
   dstE = %esp, dstM = %ebp, Stat = AOK
W: instr = rrmovl, valE = 0x620, valM = 0x0, dstE = %esp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3c0, imem_instr = <bad>, f_instr = <bad>
	Memory: Read 0x634 from 0x620
	Execute: ALU: + 0x4 0x624 --> 0x628
	Writeback: Wrote 0x620 to register %esp

Cycle 367. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3c0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = ret, Cnd = 1, valE = 0x628, valA = 0x624
   dstE = %esp, dstM = ----, Stat = AOK
W: instr = popl, valE = 0x624, valM = 0x634, dstE = %esp, dstM = %ebp, Stat = AOK
	Fetch: f_pc = 0x3c0, imem_instr = <bad>, f_instr = <bad>
	Memory: Read 0x29 from 0x624
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x624 to register %esp
	Writeback: Wrote 0x634 to register %ebp

Cycle 368. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3c0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = ret, valE = 0x628, valM = 0x29, dstE = %esp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x29, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x628 to register %esp

Cycle 369. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x2a
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x2a, Stat = HLT
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x2a, imem_instr = pushl, f_instr = pushl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 370. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x2c
D: instr = pushl, rA = %ebp, rB = ----, valC = 0x0, valP = 0x2c, Stat = AOK
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x2c, imem_instr = rrmovl, f_instr = rrmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 371. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x2e
D: instr = rrmovl, rA = %esp, rB = %ebp, valC = 0x0, valP = 0x2e, Stat = AOK
E: instr = pushl, valC = 0x0, valA = 0x634, valB = 0x628
   srcA = %ebp, srcB = %esp, dstE = %esp, dstM = ----, Stat = AOK
M: instr = halt, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = HLT
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x2e, imem_instr = pushl, f_instr = pushl
	Execute: ALU: + 0xfffffffc 0x628 --> 0x624

Cycle 372. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x30
D: instr = pushl, rA = %esi, rB = ----, valC = 0x0, valP = 0x30, Stat = AOK
E: instr = rrmovl, valC = 0x0, valA = 0x624, valB = 0x0
   srcA = %esp, srcB = ----, dstE = %ebp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = halt, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = HLT
	Fetch: f_pc = 0x30, imem_instr = pushl, f_instr = pushl
	Execute: ALU: + 0x624 0x0 --> 0x624
373 instructions executed
Status = HLT
Condition Codes: Z=0 S=0 O=0
Changed Register State:
%eax:	0x00000000	0x00000001
%ecx:	0x00000000	0x000005e4
%edx:	0x00000000	0xffffffdc
%ebx:	0x00000000	0x00000634
%esp:	0x00000000	0x00000628
%ebp:	0x00000000	0x00000634
%esi:	0x00000000	0x00000029
Changed Memory State:
0x04f4:	0x00cdefab	0x00000001
0x04fc:	0x00cdefab	0x00000003
0x0504:	0x00cdefab	0x00000003
0x0508:	0x00cdefab	0x00000006
0x050c:	0x00cdefab	0x00000003
0x0510:	0x00cdefab	0xfffffff8
0x0514:	0x00cdefab	0x00000003
0x0518:	0x00cdefab	0x0000000a
0x051c:	0x00cdefab	0x00000003
0x0520:	0x00cdefab	0x0000000c
0x0524:	0x00cdefab	0x00000001
0x052c:	0x00cdefab	0x00000003
0x0534:	0x00cdefab	0x00000003
0x0538:	0x00cdefab	0x00000006
0x053c:	0x00cdefab	0x00000003
0x0540:	0x00cdefab	0xfffffff8
0x0544:	0x00cdefab	0x00000003
0x0548:	0x00cdefab	0x0000000a
0x054c:	0x00cdefab	0x00000003
0x0550:	0x00cdefab	0x0000000c
0x0554:	0x00cdefab	0x00000001
0x055c:	0x00cdefab	0x00000003
0x0564:	0x00cdefab	0x00000003
0x0568:	0x00cdefab	0x00000006
0x056c:	0x00cdefab	0x00000003
0x0570:	0x00cdefab	0xfffffff8
0x0574:	0x00cdefab	0x00000003
0x0578:	0x00cdefab	0x0000000a
0x057c:	0x00cdefab	0x00000003
0x0580:	0x00cdefab	0x0000000c
0x0584:	0x00cdefab	0x00000001
0x058c:	0x00cdefab	0x00000003
0x0594:	0x00cdefab	0x00000003
0x0598:	0x00cdefab	0x00000006
0x059c:	0x00cdefab	0x00000003
0x05a0:	0x00cdefab	0xfffffff8
0x05a4:	0x00cdefab	0x00000003
0x05a8:	0x00cdefab	0x0000000a
0x05ac:	0x00cdefab	0x00000003
0x05b0:	0x00cdefab	0x0000000c
0x05b4:	0x00cdefab	0x00000001
0x05bc:	0x00cdefab	0x00000003
0x05c4:	0x00cdefab	0x00000003
0x05c8:	0x00cdefab	0x00000006
0x05cc:	0x00cdefab	0x00000003
0x05d0:	0x00cdefab	0xfffffff8
0x05d4:	0x00cdefab	0x00000003
0x05d8:	0x00cdefab	0x0000000a
0x05dc:	0x00cdefab	0x00000003
0x05e0:	0x00cdefab	0x0000000c
0x05e4:	0x00cdefab	0x00000003
0x05ec:	0x00cdefab	0x00000003
0x0610:	0x00000000	0x0000036a
0x0620:	0x00000000	0x00000634
0x0624:	0x00000000	0x00000029
0x0628:	0x00000000	0x000003f0
0x062c:	0x00000000	0x000004f4
0x0630:	0x00000000	0x0000003f
ISA Register != Pipeline Register File
%eax:	0x0000001f	0x00000001
%ebx:	0x00000000	0x00000634
%esi:	0x00000000	0x00000029
ISA Memory != Pipeline Memory
0x04f8:	0xfffffffe	0x00cdefab
0x0500:	0x00000004	0x00cdefab
0x0504:	0x00000005	0x00000003
0x050c:	0xfffffff9	0x00000003
0x0514:	0x00000009	0x00000003
0x051c:	0xfffffff5	0x00000003
0x0524:	0x0000000d	0x00000001
0x0528:	0x0000000e	0x00cdefab
0x052c:	0xfffffff1	0x00000003
0x0530:	0xfffffff0	0x00cdefab
0x0534:	0xffffffef	0x00000003
0x0538:	0xffffffee	0x00000006
0x053c:	0xffffffed	0x00000003
0x0540:	0x00000014	0xfffffff8
0x0544:	0x00000015	0x00000003
0x0548:	0xffffffea	0x0000000a
0x054c:	0xffffffe9	0x00000003
0x0550:	0x00000018	0x0000000c
0x0554:	0xffffffe7	0x00000001
0x0558:	0x0000001a	0x00cdefab
0x055c:	0xffffffe5	0x00000003
0x0560:	0xffffffe4	0x00cdefab
0x0564:	0x0000001d	0x00000003
0x0568:	0x0000001e	0x00000006
0x056c:	0x0000001f	0x00000003
0x0570:	0x00000020	0xfffffff8
0x0574:	0xffffffdf	0x00000003
0x0578:	0xffffffde	0x0000000a
0x057c:	0x00000023	0x00000003
0x0580:	0xffffffdc	0x0000000c
0x0584:	0xffffffdb	0x00000001
0x0588:	0x00000026	0x00cdefab
0x058c:	0x00000027	0x00000003
0x0590:	0xffffffd8	0x00cdefab
0x0594:	0xffffffd7	0x00000003
0x0598:	0x0000002a	0x00000006
0x059c:	0x0000002b	0x00000003
0x05a0:	0xffffffd4	0xfffffff8
0x05a4:	0x0000002d	0x00000003
0x05a8:	0x0000002e	0x0000000a
0x05ac:	0x0000002f	0x00000003
0x05b0:	0xffffffd0	0x0000000c
0x05b4:	0xffffffcf	0x00000001
0x05b8:	0xffffffce	0x00cdefab
0x05bc:	0xffffffcd	0x00000003
0x05c0:	0x00000034	0x00cdefab
0x05c4:	0x00000035	0x00000003
0x05c8:	0xffffffca	0x00000006
0x05cc:	0xffffffc9	0x00000003
0x05d0:	0xffffffc8	0xfffffff8
0x05d4:	0x00000039	0x00000003
0x05d8:	0x0000003a	0x0000000a
0x05dc:	0xffffffc5	0x00000003
0x05e0:	0x0000003c	0x0000000c
0x05e4:	0xffffffc3	0x00000003
0x05e8:	0xffffffc2	0x00cdefab
0x05ec:	0xffffffc1	0x00000003
ISA Cond. Codes (Z=0 S=1 O=0) != Pipeline Cond. Codes (Z=0 S=0 O=0)
ISA Check Fails
CPI: 369 cycles/246 instructions = 1.50
